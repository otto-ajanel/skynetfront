{
  "version": 3,
  "sources": ["../../src/menubar/style/MenubarStyle.js", "../../src/menubar/BaseMenubar.vue", "../../src/menubar/MenubarSub.vue", "../../src/menubar/MenubarSub.vue?vue&type=template&id=c74be8d4&lang.js", "../../src/menubar/Menubar.vue", "../../src/menubar/Menubar.vue?vue&type=template&id=059aecdb&lang.js"],
  "sourcesContent": ["import BaseStyle from '@primevue/core/base/style';\n\nconst theme = ({ dt }) => `\n.p-menubar {\n    display: flex;\n    align-items: center;\n    background: ${dt('menubar.background')};\n    border: 1px solid ${dt('menubar.border.color')};\n    border-radius: ${dt('menubar.border.radius')};\n    color: ${dt('menubar.color')};\n    padding: ${dt('menubar.padding')};\n    gap: ${dt('menubar.gap')};\n}\n\n.p-menubar-start,\n.p-megamenu-end {\n    display: flex;\n    align-items: center;\n}\n\n.p-menubar-root-list,\n.p-menubar-submenu {\n    display: flex;\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    outline: 0 none;\n}\n\n.p-menubar-root-list {\n    align-items: center;\n    flex-wrap: wrap;\n    gap: ${dt('menubar.gap')};\n}\n\n.p-menubar-root-list > .p-menubar-item > .p-menubar-item-content {\n    border-radius: ${dt('menubar.base.item.border.radius')};\n}\n\n.p-menubar-root-list > .p-menubar-item > .p-menubar-item-content > .p-menubar-item-link {\n    padding: ${dt('menubar.base.item.padding')};\n}\n\n.p-menubar-item-content {\n    transition: background ${dt('menubar.transition.duration')}, color ${dt('menubar.transition.duration')};\n    border-radius: ${dt('menubar.item.border.radius')};\n    color: ${dt('menubar.item.color')};\n}\n\n.p-menubar-item-link {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    overflow: hidden;\n    position: relative;\n    color: inherit;\n    padding: ${dt('menubar.item.padding')};\n    gap: ${dt('menubar.item.gap')};\n    user-select: none;\n    outline: 0 none;\n}\n\n.p-menubar-item-label {\n    line-height: 1;\n}\n\n.p-menubar-item-icon {\n    color: ${dt('menubar.item.icon.color')};\n}\n\n.p-menubar-submenu-icon {\n    color: ${dt('menubar.submenu.icon.color')};\n    margin-left: auto;\n    font-size: ${dt('menubar.submenu.icon.size')};\n    width: ${dt('menubar.submenu.icon.size')};\n    height: ${dt('menubar.submenu.icon.size')};\n}\n\n.p-menubar-item.p-focus > .p-menubar-item-content {\n    color: ${dt('menubar.item.focus.color')};\n    background: ${dt('menubar.item.focus.background')};\n}\n\n.p-menubar-item.p-focus > .p-menubar-item-content .p-menubar-item-icon {\n    color: ${dt('menubar.item.icon.focus.color')};\n}\n\n.p-menubar-item.p-focus > .p-menubar-item-content .p-menubar-submenu-icon {\n    color: ${dt('menubar.submenu.icon.focus.color')};\n}\n\n.p-menubar-item:not(.p-disabled) > .p-menubar-item-content:hover {\n    color: ${dt('menubar.item.focus.color')};\n    background: ${dt('menubar.item.focus.background')};\n}\n\n.p-menubar-item:not(.p-disabled) > .p-menubar-item-content:hover .p-menubar-item-icon {\n    color: ${dt('menubar.item.icon.focus.color')};\n}\n\n.p-menubar-item:not(.p-disabled) > .p-menubar-item-content:hover .p-menubar-submenu-icon {\n    color: ${dt('menubar.submenu.icon.focus.color')};\n}\n\n.p-menubar-item-active > .p-menubar-item-content {\n    color: ${dt('menubar.item.active.color')};\n    background: ${dt('menubar.item.active.background')};\n}\n\n.p-menubar-item-active > .p-menubar-item-content .p-menubar-item-icon {\n    color: ${dt('menubar.item.icon.active.color')};\n}\n\n.p-menubar-item-active > .p-menubar-item-content .p-menubar-submenu-icon {\n    color: ${dt('menubar.submenu.icon.active.color')};\n}\n\n.p-menubar-submenu {\n    display: none;\n    position: absolute;\n    min-width: 12.5rem;\n    z-index: 1;\n    background: ${dt('menubar.submenu.background')};\n    border: 1px solid ${dt('menubar.submenu.border.color')};\n    border-radius: ${dt('menubar.border.radius')};\n    box-shadow: ${dt('menubar.submenu.shadow')};\n    color: ${dt('menubar.submenu.color')};\n    flex-direction: column;\n    padding: ${dt('menubar.submenu.padding')};\n    gap: ${dt('menubar.submenu.gap')};\n}\n\n.p-menubar-submenu .p-menubar-separator {\n    border-top: 1px solid ${dt('menubar.separator.border.color')};\n}\n\n.p-menubar-submenu .p-menubar-item {\n    position: relative;\n}\n\n .p-menubar-submenu > .p-menubar-item-active > .p-menubar-submenu {\n    display: block;\n    left: 100%;\n    top: 0;\n}\n\n.p-menubar-end {\n    margin-left: auto;\n    align-self: center;\n}\n\n.p-menubar-button {\n    display: none;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    width: ${dt('menubar.mobile.button.size')};\n    height: ${dt('menubar.mobile.button.size')};\n    position: relative;\n    color: ${dt('menubar.mobile.button.color')};\n    border: 0 none;\n    background: transparent;\n    border-radius: ${dt('menubar.mobile.button.border.radius')};\n    transition: background ${dt('menubar.transition.duration')}, color ${dt('menubar.transition.duration')}, outline-color ${dt('menubar.transition.duration')};\n    outline-color: transparent;\n}\n\n.p-menubar-button:hover {\n    color: ${dt('menubar.mobile.button.hover.color')};\n    background: ${dt('menubar.mobile.button.hover.background')};\n}\n\n.p-menubar-button:focus-visible {\n    box-shadow: ${dt('menubar.mobile.button.focus.ring.shadow')};\n    outline: ${dt('menubar.mobile.button.focus.ring.width')} ${dt('menubar.mobile.button.focus.ring.style')} ${dt('menubar.mobile.button.focus.ring.color')};\n    outline-offset: ${dt('menubar.mobile.button.focus.ring.offset')};\n}\n\n.p-menubar-mobile {\n    position: relative;\n}\n\n.p-menubar-mobile .p-menubar-button {\n    display: flex;\n}\n\n.p-menubar-mobile .p-menubar-root-list {\n    position: absolute;\n    display: none;\n    width: 100%;\n    padding: ${dt('menubar.submenu.padding')};\n    background: ${dt('menubar.submenu.background')};\n    border: 1px solid ${dt('menubar.submenu.border.color')};\n    box-shadow: ${dt('menubar.submenu.shadow')};\n}\n\n.p-menubar-mobile .p-menubar-root-list > .p-menubar-item > .p-menubar-item-content {\n    border-radius: ${dt('menubar.item.border.radius')};\n}\n\n.p-menubar-mobile .p-menubar-root-list > .p-menubar-item > .p-menubar-item-content > .p-menubar-item-link {\n    padding: ${dt('menubar.item.padding')};\n}\n\n.p-menubar-mobile-active .p-menubar-root-list {\n    display: flex;\n    flex-direction: column;\n    top: 100%;\n    left: 0;\n    z-index: 1;\n}\n\n.p-menubar-mobile .p-menubar-root-list .p-menubar-item {\n    width: 100%;\n    position: static;\n}\n\n.p-menubar-mobile .p-menubar-root-list .p-menubar-separator {\n    border-top: 1px solid ${dt('menubar.separator.border.color')};\n}\n\n.p-menubar-mobile .p-menubar-root-list > .p-menubar-item > .p-menubar-item-content .p-menubar-submenu-icon {\n    margin-left: auto;\n    transition: transform 0.2s;\n}\n\n.p-menubar-mobile .p-menubar-root-list > .p-menubar-item-active > .p-menubar-item-content .p-menubar-submenu-icon {\n    transform: rotate(-180deg);\n}\n\n.p-menubar-mobile .p-menubar-submenu .p-menubar-submenu-icon {\n    transition: transform 0.2s;\n    transform: rotate(90deg);\n}\n\n.p-menubar-mobile  .p-menubar-item-active > .p-menubar-item-content .p-menubar-submenu-icon {\n    transform: rotate(-90deg);\n}\n\n.p-menubar-mobile .p-menubar-submenu {\n    width: 100%;\n    position: static;\n    box-shadow: none;\n    border: 0 none;\n    padding-left: ${dt('menubar.submenu.mobile.indent')};\n}\n`;\n\nconst inlineStyles = {\n    submenu: ({ instance, processedItem }) => ({ display: instance.isItemActive(processedItem) ? 'flex' : 'none' })\n};\n\nconst classes = {\n    root: ({ instance }) => [\n        'p-menubar p-component',\n        {\n            'p-menubar-mobile': instance.queryMatches,\n            'p-menubar-mobile-active': instance.mobileActive\n        }\n    ],\n    start: 'p-menubar-start',\n    button: 'p-menubar-button',\n    rootList: 'p-menubar-root-list',\n    item: ({ instance, processedItem }) => [\n        'p-menubar-item',\n        {\n            'p-menubar-item-active': instance.isItemActive(processedItem),\n            'p-focus': instance.isItemFocused(processedItem),\n            'p-disabled': instance.isItemDisabled(processedItem)\n        }\n    ],\n    itemContent: 'p-menubar-item-content',\n    itemLink: 'p-menubar-item-link',\n    itemIcon: 'p-menubar-item-icon',\n    itemLabel: 'p-menubar-item-label',\n    submenuIcon: 'p-menubar-submenu-icon',\n    submenu: 'p-menubar-submenu',\n    separator: 'p-menubar-separator',\n    end: 'p-menubar-end'\n};\n\nexport default BaseStyle.extend({\n    name: 'menubar',\n    theme,\n    classes,\n    inlineStyles\n});\n", "<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport MenubarStyle from 'primevue/menubar/style';\n\nexport default {\n    name: 'BaseMenubar',\n    extends: BaseComponent,\n    props: {\n        model: {\n            type: Array,\n            default: null\n        },\n        buttonProps: {\n            type: null,\n            default: null\n        },\n        breakpoint: {\n            type: String,\n            default: '960px'\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        }\n    },\n    style: MenubarStyle,\n    provide() {\n        return {\n            $pcMenubar: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n", "<template>\n    <ul :class=\"level === 0 ? cx('rootList') : cx('submenu')\" v-bind=\"level === 0 ? ptm('rootList') : ptm('submenu')\">\n        <template v-for=\"(processedItem, index) of items\" :key=\"getItemKey(processedItem)\">\n            <li\n                v-if=\"isItemVisible(processedItem) && !getItemProp(processedItem, 'separator')\"\n                :id=\"getItemId(processedItem)\"\n                :style=\"getItemProp(processedItem, 'style')\"\n                :class=\"[cx('item', { processedItem }), getItemProp(processedItem, 'class')]\"\n                role=\"menuitem\"\n                :aria-label=\"getItemLabel(processedItem)\"\n                :aria-disabled=\"isItemDisabled(processedItem) || undefined\"\n                :aria-expanded=\"isItemGroup(processedItem) ? isItemActive(processedItem) : undefined\"\n                :aria-haspopup=\"isItemGroup(processedItem) && !getItemProp(processedItem, 'to') ? 'menu' : undefined\"\n                :aria-level=\"level + 1\"\n                :aria-setsize=\"getAriaSetSize()\"\n                :aria-posinset=\"getAriaPosInset(index)\"\n                v-bind=\"getPTOptions(processedItem, index, 'item')\"\n                :data-p-active=\"isItemActive(processedItem)\"\n                :data-p-focused=\"isItemFocused(processedItem)\"\n                :data-p-disabled=\"isItemDisabled(processedItem)\"\n            >\n                <div\n                    :class=\"cx('itemContent')\"\n                    @click=\"onItemClick($event, processedItem)\"\n                    @mouseenter=\"onItemMouseEnter($event, processedItem)\"\n                    @mousemove=\"onItemMouseMove($event, processedItem)\"\n                    v-bind=\"getPTOptions(processedItem, index, 'itemContent')\"\n                >\n                    <template v-if=\"!templates.item\">\n                        <a v-ripple :href=\"getItemProp(processedItem, 'url')\" :class=\"cx('itemLink')\" :target=\"getItemProp(processedItem, 'target')\" tabindex=\"-1\" aria-hidden=\"true\" v-bind=\"getPTOptions(processedItem, index, 'itemLink')\">\n                            <component v-if=\"templates.itemicon\" :is=\"templates.itemicon\" :item=\"processedItem.item\" :class=\"cx('itemIcon')\" />\n                            <span v-else-if=\"getItemProp(processedItem, 'icon')\" :class=\"[cx('itemIcon'), getItemProp(processedItem, 'icon')]\" v-bind=\"getPTOptions(processedItem, index, 'itemIcon')\" />\n                            <span :id=\"getItemLabelId(processedItem)\" :class=\"cx('itemLabel')\" v-bind=\"getPTOptions(processedItem, index, 'itemLabel')\">{{ getItemLabel(processedItem) }}</span>\n                            <template v-if=\"getItemProp(processedItem, 'items')\">\n                                <component v-if=\"templates.submenuicon\" :is=\"templates.submenuicon\" :root=\"root\" :active=\"isItemActive(processedItem)\" :class=\"cx('submenuIcon')\" />\n                                <component v-else :is=\"root ? 'AngleDownIcon' : 'AngleRightIcon'\" :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions(processedItem, index, 'submenuIcon')\" />\n                            </template>\n                        </a>\n                    </template>\n                    <component v-else :is=\"templates.item\" :item=\"processedItem.item\" :root=\"root\" :hasSubmenu=\"getItemProp(processedItem, 'items')\" :label=\"getItemLabel(processedItem)\" :props=\"getMenuItemProps(processedItem, index)\"></component>\n                </div>\n                <MenubarSub\n                    v-if=\"isItemVisible(processedItem) && isItemGroup(processedItem)\"\n                    :id=\"getItemId(processedItem) + '_list'\"\n                    :menuId=\"menuId\"\n                    role=\"menu\"\n                    :style=\"sx('submenu', true, { processedItem })\"\n                    :focusedItemId=\"focusedItemId\"\n                    :items=\"processedItem.items\"\n                    :mobileActive=\"mobileActive\"\n                    :activeItemPath=\"activeItemPath\"\n                    :templates=\"templates\"\n                    :level=\"level + 1\"\n                    :aria-labelledby=\"getItemLabelId(processedItem)\"\n                    :pt=\"pt\"\n                    :unstyled=\"unstyled\"\n                    @item-click=\"$emit('item-click', $event)\"\n                    @item-mouseenter=\"$emit('item-mouseenter', $event)\"\n                    @item-mousemove=\"$emit('item-mousemove', $event)\"\n                />\n            </li>\n            <li\n                v-if=\"isItemVisible(processedItem) && getItemProp(processedItem, 'separator')\"\n                :id=\"getItemId(processedItem)\"\n                :class=\"[cx('separator'), getItemProp(processedItem, 'class')]\"\n                :style=\"getItemProp(processedItem, 'style')\"\n                role=\"separator\"\n                v-bind=\"ptm('separator')\"\n            ></li>\n        </template>\n    </ul>\n</template>\n\n<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport { ObjectUtils } from '@primevue/core/utils';\nimport AngleDownIcon from '@primevue/icons/angledown';\nimport AngleRightIcon from '@primevue/icons/angleright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'MenubarSub',\n    hostName: 'Menubar',\n    extends: BaseComponent,\n    emits: ['item-mouseenter', 'item-click', 'item-mousemove'],\n    props: {\n        items: {\n            type: Array,\n            default: null\n        },\n        root: {\n            type: Boolean,\n            default: false\n        },\n        popup: {\n            type: Boolean,\n            default: false\n        },\n        mobileActive: {\n            type: Boolean,\n            default: false\n        },\n        templates: {\n            type: Object,\n            default: null\n        },\n        level: {\n            type: Number,\n            default: 0\n        },\n        menuId: {\n            type: String,\n            default: null\n        },\n        focusedItemId: {\n            type: String,\n            default: null\n        },\n        activeItemPath: {\n            type: Object,\n            default: null\n        }\n    },\n    list: null,\n    methods: {\n        getItemId(processedItem) {\n            return `${this.menuId}_${processedItem.key}`;\n        },\n        getItemKey(processedItem) {\n            return this.getItemId(processedItem);\n        },\n        getItemProp(processedItem, name, params) {\n            return processedItem && processedItem.item ? ObjectUtils.getItemValue(processedItem.item[name], params) : undefined;\n        },\n        getItemLabel(processedItem) {\n            return this.getItemProp(processedItem, 'label');\n        },\n        getItemLabelId(processedItem) {\n            return `${this.menuId}_${processedItem.key}_label`;\n        },\n        getPTOptions(processedItem, index, key) {\n            return this.ptm(key, {\n                context: {\n                    item: processedItem,\n                    index,\n                    active: this.isItemActive(processedItem),\n                    focused: this.isItemFocused(processedItem),\n                    disabled: this.isItemDisabled(processedItem),\n                    level: this.level\n                }\n            });\n        },\n        isItemActive(processedItem) {\n            return this.activeItemPath.some((path) => path.key === processedItem.key);\n        },\n        isItemVisible(processedItem) {\n            return this.getItemProp(processedItem, 'visible') !== false;\n        },\n        isItemDisabled(processedItem) {\n            return this.getItemProp(processedItem, 'disabled');\n        },\n        isItemFocused(processedItem) {\n            return this.focusedItemId === this.getItemId(processedItem);\n        },\n        isItemGroup(processedItem) {\n            return ObjectUtils.isNotEmpty(processedItem.items);\n        },\n        onItemClick(event, processedItem) {\n            this.getItemProp(processedItem, 'command', { originalEvent: event, item: processedItem.item });\n            this.$emit('item-click', { originalEvent: event, processedItem, isFocus: true });\n        },\n        onItemMouseEnter(event, processedItem) {\n            this.$emit('item-mouseenter', { originalEvent: event, processedItem });\n        },\n        onItemMouseMove(event, processedItem) {\n            this.$emit('item-mousemove', { originalEvent: event, processedItem });\n        },\n        getAriaSetSize() {\n            return this.items.filter((processedItem) => this.isItemVisible(processedItem) && !this.getItemProp(processedItem, 'separator')).length;\n        },\n        getAriaPosInset(index) {\n            return index - this.items.slice(0, index).filter((processedItem) => this.isItemVisible(processedItem) && this.getItemProp(processedItem, 'separator')).length + 1;\n        },\n        getMenuItemProps(processedItem, index) {\n            return {\n                action: mergeProps(\n                    {\n                        class: this.cx('itemLink'),\n                        tabindex: -1,\n                        'aria-hidden': true\n                    },\n                    this.getPTOptions(processedItem, index, 'itemLink')\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n                    },\n                    this.getPTOptions(processedItem, index, 'itemIcon')\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('itemLabel')\n                    },\n                    this.getPTOptions(processedItem, index, 'itemLabel')\n                ),\n                submenuicon: mergeProps(\n                    {\n                        class: this.cx('submenuIcon')\n                    },\n                    this.getPTOptions(processedItem, index, 'submenuIcon')\n                )\n            };\n        }\n    },\n    components: {\n        AngleRightIcon: AngleRightIcon,\n        AngleDownIcon: AngleDownIcon\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n", "<template>\n    <ul :class=\"level === 0 ? cx('rootList') : cx('submenu')\" v-bind=\"level === 0 ? ptm('rootList') : ptm('submenu')\">\n        <template v-for=\"(processedItem, index) of items\" :key=\"getItemKey(processedItem)\">\n            <li\n                v-if=\"isItemVisible(processedItem) && !getItemProp(processedItem, 'separator')\"\n                :id=\"getItemId(processedItem)\"\n                :style=\"getItemProp(processedItem, 'style')\"\n                :class=\"[cx('item', { processedItem }), getItemProp(processedItem, 'class')]\"\n                role=\"menuitem\"\n                :aria-label=\"getItemLabel(processedItem)\"\n                :aria-disabled=\"isItemDisabled(processedItem) || undefined\"\n                :aria-expanded=\"isItemGroup(processedItem) ? isItemActive(processedItem) : undefined\"\n                :aria-haspopup=\"isItemGroup(processedItem) && !getItemProp(processedItem, 'to') ? 'menu' : undefined\"\n                :aria-level=\"level + 1\"\n                :aria-setsize=\"getAriaSetSize()\"\n                :aria-posinset=\"getAriaPosInset(index)\"\n                v-bind=\"getPTOptions(processedItem, index, 'item')\"\n                :data-p-active=\"isItemActive(processedItem)\"\n                :data-p-focused=\"isItemFocused(processedItem)\"\n                :data-p-disabled=\"isItemDisabled(processedItem)\"\n            >\n                <div\n                    :class=\"cx('itemContent')\"\n                    @click=\"onItemClick($event, processedItem)\"\n                    @mouseenter=\"onItemMouseEnter($event, processedItem)\"\n                    @mousemove=\"onItemMouseMove($event, processedItem)\"\n                    v-bind=\"getPTOptions(processedItem, index, 'itemContent')\"\n                >\n                    <template v-if=\"!templates.item\">\n                        <a v-ripple :href=\"getItemProp(processedItem, 'url')\" :class=\"cx('itemLink')\" :target=\"getItemProp(processedItem, 'target')\" tabindex=\"-1\" aria-hidden=\"true\" v-bind=\"getPTOptions(processedItem, index, 'itemLink')\">\n                            <component v-if=\"templates.itemicon\" :is=\"templates.itemicon\" :item=\"processedItem.item\" :class=\"cx('itemIcon')\" />\n                            <span v-else-if=\"getItemProp(processedItem, 'icon')\" :class=\"[cx('itemIcon'), getItemProp(processedItem, 'icon')]\" v-bind=\"getPTOptions(processedItem, index, 'itemIcon')\" />\n                            <span :id=\"getItemLabelId(processedItem)\" :class=\"cx('itemLabel')\" v-bind=\"getPTOptions(processedItem, index, 'itemLabel')\">{{ getItemLabel(processedItem) }}</span>\n                            <template v-if=\"getItemProp(processedItem, 'items')\">\n                                <component v-if=\"templates.submenuicon\" :is=\"templates.submenuicon\" :root=\"root\" :active=\"isItemActive(processedItem)\" :class=\"cx('submenuIcon')\" />\n                                <component v-else :is=\"root ? 'AngleDownIcon' : 'AngleRightIcon'\" :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions(processedItem, index, 'submenuIcon')\" />\n                            </template>\n                        </a>\n                    </template>\n                    <component v-else :is=\"templates.item\" :item=\"processedItem.item\" :root=\"root\" :hasSubmenu=\"getItemProp(processedItem, 'items')\" :label=\"getItemLabel(processedItem)\" :props=\"getMenuItemProps(processedItem, index)\"></component>\n                </div>\n                <MenubarSub\n                    v-if=\"isItemVisible(processedItem) && isItemGroup(processedItem)\"\n                    :id=\"getItemId(processedItem) + '_list'\"\n                    :menuId=\"menuId\"\n                    role=\"menu\"\n                    :style=\"sx('submenu', true, { processedItem })\"\n                    :focusedItemId=\"focusedItemId\"\n                    :items=\"processedItem.items\"\n                    :mobileActive=\"mobileActive\"\n                    :activeItemPath=\"activeItemPath\"\n                    :templates=\"templates\"\n                    :level=\"level + 1\"\n                    :aria-labelledby=\"getItemLabelId(processedItem)\"\n                    :pt=\"pt\"\n                    :unstyled=\"unstyled\"\n                    @item-click=\"$emit('item-click', $event)\"\n                    @item-mouseenter=\"$emit('item-mouseenter', $event)\"\n                    @item-mousemove=\"$emit('item-mousemove', $event)\"\n                />\n            </li>\n            <li\n                v-if=\"isItemVisible(processedItem) && getItemProp(processedItem, 'separator')\"\n                :id=\"getItemId(processedItem)\"\n                :class=\"[cx('separator'), getItemProp(processedItem, 'class')]\"\n                :style=\"getItemProp(processedItem, 'style')\"\n                role=\"separator\"\n                v-bind=\"ptm('separator')\"\n            ></li>\n        </template>\n    </ul>\n</template>\n\n<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport { ObjectUtils } from '@primevue/core/utils';\nimport AngleDownIcon from '@primevue/icons/angledown';\nimport AngleRightIcon from '@primevue/icons/angleright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'MenubarSub',\n    hostName: 'Menubar',\n    extends: BaseComponent,\n    emits: ['item-mouseenter', 'item-click', 'item-mousemove'],\n    props: {\n        items: {\n            type: Array,\n            default: null\n        },\n        root: {\n            type: Boolean,\n            default: false\n        },\n        popup: {\n            type: Boolean,\n            default: false\n        },\n        mobileActive: {\n            type: Boolean,\n            default: false\n        },\n        templates: {\n            type: Object,\n            default: null\n        },\n        level: {\n            type: Number,\n            default: 0\n        },\n        menuId: {\n            type: String,\n            default: null\n        },\n        focusedItemId: {\n            type: String,\n            default: null\n        },\n        activeItemPath: {\n            type: Object,\n            default: null\n        }\n    },\n    list: null,\n    methods: {\n        getItemId(processedItem) {\n            return `${this.menuId}_${processedItem.key}`;\n        },\n        getItemKey(processedItem) {\n            return this.getItemId(processedItem);\n        },\n        getItemProp(processedItem, name, params) {\n            return processedItem && processedItem.item ? ObjectUtils.getItemValue(processedItem.item[name], params) : undefined;\n        },\n        getItemLabel(processedItem) {\n            return this.getItemProp(processedItem, 'label');\n        },\n        getItemLabelId(processedItem) {\n            return `${this.menuId}_${processedItem.key}_label`;\n        },\n        getPTOptions(processedItem, index, key) {\n            return this.ptm(key, {\n                context: {\n                    item: processedItem,\n                    index,\n                    active: this.isItemActive(processedItem),\n                    focused: this.isItemFocused(processedItem),\n                    disabled: this.isItemDisabled(processedItem),\n                    level: this.level\n                }\n            });\n        },\n        isItemActive(processedItem) {\n            return this.activeItemPath.some((path) => path.key === processedItem.key);\n        },\n        isItemVisible(processedItem) {\n            return this.getItemProp(processedItem, 'visible') !== false;\n        },\n        isItemDisabled(processedItem) {\n            return this.getItemProp(processedItem, 'disabled');\n        },\n        isItemFocused(processedItem) {\n            return this.focusedItemId === this.getItemId(processedItem);\n        },\n        isItemGroup(processedItem) {\n            return ObjectUtils.isNotEmpty(processedItem.items);\n        },\n        onItemClick(event, processedItem) {\n            this.getItemProp(processedItem, 'command', { originalEvent: event, item: processedItem.item });\n            this.$emit('item-click', { originalEvent: event, processedItem, isFocus: true });\n        },\n        onItemMouseEnter(event, processedItem) {\n            this.$emit('item-mouseenter', { originalEvent: event, processedItem });\n        },\n        onItemMouseMove(event, processedItem) {\n            this.$emit('item-mousemove', { originalEvent: event, processedItem });\n        },\n        getAriaSetSize() {\n            return this.items.filter((processedItem) => this.isItemVisible(processedItem) && !this.getItemProp(processedItem, 'separator')).length;\n        },\n        getAriaPosInset(index) {\n            return index - this.items.slice(0, index).filter((processedItem) => this.isItemVisible(processedItem) && this.getItemProp(processedItem, 'separator')).length + 1;\n        },\n        getMenuItemProps(processedItem, index) {\n            return {\n                action: mergeProps(\n                    {\n                        class: this.cx('itemLink'),\n                        tabindex: -1,\n                        'aria-hidden': true\n                    },\n                    this.getPTOptions(processedItem, index, 'itemLink')\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n                    },\n                    this.getPTOptions(processedItem, index, 'itemIcon')\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('itemLabel')\n                    },\n                    this.getPTOptions(processedItem, index, 'itemLabel')\n                ),\n                submenuicon: mergeProps(\n                    {\n                        class: this.cx('submenuIcon')\n                    },\n                    this.getPTOptions(processedItem, index, 'submenuIcon')\n                )\n            };\n        }\n    },\n    components: {\n        AngleRightIcon: AngleRightIcon,\n        AngleDownIcon: AngleDownIcon\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n", "<template>\n    <div :ref=\"containerRef\" :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <div v-if=\"$slots.start\" :class=\"cx('start')\" v-bind=\"ptm('start')\">\n            <slot name=\"start\"></slot>\n        </div>\n        <slot :id=\"id\" :name=\"$slots.button ? 'button' : 'menubutton'\" :class=\"cx('button')\" :toggleCallback=\"(event) => menuButtonClick(event)\">\n            <!-- TODO: menubutton deprecated since v4.0-->\n            <a\n                v-if=\"model && model.length > 0\"\n                ref=\"menubutton\"\n                role=\"button\"\n                tabindex=\"0\"\n                :class=\"cx('button')\"\n                :aria-haspopup=\"model.length && model.length > 0 ? true : false\"\n                :aria-expanded=\"mobileActive\"\n                :aria-controls=\"id\"\n                :aria-label=\"$primevue.config.locale.aria?.navigation\"\n                @click=\"menuButtonClick($event)\"\n                @keydown=\"menuButtonKeydown($event)\"\n                v-bind=\"{ ...buttonProps, ...ptm('button') }\"\n            >\n                <!-- TODO: menubuttonicon deprecated since v4.0-->\n                <slot :name=\"$slots.buttonicon ? 'buttonicon' : 'menubuttonicon'\">\n                    <BarsIcon v-bind=\"ptm('buttonicon')\" />\n                </slot>\n            </a>\n        </slot>\n        <MenubarSub\n            :ref=\"menubarRef\"\n            :id=\"id + '_list'\"\n            role=\"menubar\"\n            :items=\"processedItems\"\n            :templates=\"$slots\"\n            :root=\"true\"\n            :mobileActive=\"mobileActive\"\n            tabindex=\"0\"\n            :aria-activedescendant=\"focused ? focusedItemId : undefined\"\n            :menuId=\"id\"\n            :focusedItemId=\"focused ? focusedItemId : undefined\"\n            :activeItemPath=\"activeItemPath\"\n            :level=\"0\"\n            :aria-labelledby=\"ariaLabelledby\"\n            :aria-label=\"ariaLabel\"\n            :pt=\"pt\"\n            :unstyled=\"unstyled\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @keydown=\"onKeyDown\"\n            @item-click=\"onItemClick\"\n            @item-mouseenter=\"onItemMouseEnter\"\n            @item-mousemove=\"onItemMouseMove\"\n        />\n        <div v-if=\"$slots.end\" :class=\"cx('end')\" v-bind=\"ptm('end')\">\n            <slot name=\"end\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { DomHandler, ObjectUtils, UniqueComponentId, ZIndexUtils } from '@primevue/core/utils';\nimport BarsIcon from '@primevue/icons/bars';\nimport BaseMenubar from './BaseMenubar.vue';\nimport MenubarSub from './MenubarSub.vue';\n\nexport default {\n    name: 'Menubar',\n    extends: BaseMenubar,\n    inheritAttrs: false,\n    emits: ['focus', 'blur'],\n    matchMediaListener: null,\n    data() {\n        return {\n            id: this.$attrs.id,\n            mobileActive: false,\n            focused: false,\n            focusedItemInfo: { index: -1, level: 0, parentKey: '' },\n            activeItemPath: [],\n            dirty: false,\n            query: null,\n            queryMatches: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        activeItemPath(newPath) {\n            if (ObjectUtils.isNotEmpty(newPath)) {\n                this.bindOutsideClickListener();\n                this.bindResizeListener();\n            } else {\n                this.unbindOutsideClickListener();\n                this.unbindResizeListener();\n            }\n        }\n    },\n    outsideClickListener: null,\n    container: null,\n    menubar: null,\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n        this.bindMatchMediaListener();\n    },\n    beforeUnmount() {\n        this.mobileActive = false;\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n        this.unbindMatchMediaListener();\n\n        if (this.container) {\n            ZIndexUtils.clear(this.container);\n        }\n\n        this.container = null;\n    },\n    methods: {\n        getItemProp(item, name) {\n            return item ? ObjectUtils.getItemValue(item[name]) : undefined;\n        },\n        getItemLabel(item) {\n            return this.getItemProp(item, 'label');\n        },\n        isItemDisabled(item) {\n            return this.getItemProp(item, 'disabled');\n        },\n        isItemVisible(item) {\n            return this.getItemProp(item, 'visible') !== false;\n        },\n        isItemGroup(item) {\n            return ObjectUtils.isNotEmpty(this.getItemProp(item, 'items'));\n        },\n        isItemSeparator(item) {\n            return this.getItemProp(item, 'separator');\n        },\n        getProccessedItemLabel(processedItem) {\n            return processedItem ? this.getItemLabel(processedItem.item) : undefined;\n        },\n        isProccessedItemGroup(processedItem) {\n            return processedItem && ObjectUtils.isNotEmpty(processedItem.items);\n        },\n        toggle(event) {\n            if (this.mobileActive) {\n                this.mobileActive = false;\n                ZIndexUtils.clear(this.menubar);\n                this.hide();\n            } else {\n                this.mobileActive = true;\n                ZIndexUtils.set('menu', this.menubar, this.$primevue.config.zIndex.menu);\n                setTimeout(() => {\n                    this.show();\n                }, 1);\n            }\n\n            this.bindOutsideClickListener();\n            event.preventDefault();\n        },\n        show() {\n            DomHandler.focus(this.menubar);\n        },\n        hide(event, isFocus) {\n            if (this.mobileActive) {\n                this.mobileActive = false;\n                setTimeout(() => {\n                    DomHandler.focus(this.$refs.menubutton);\n                }, 0);\n            }\n\n            this.activeItemPath = [];\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n\n            isFocus && DomHandler.focus(this.menubar);\n            this.dirty = false;\n        },\n        onFocus(event) {\n            this.focused = true;\n            this.focusedItemInfo = this.focusedItemInfo.index !== -1 ? this.focusedItemInfo : { index: this.findFirstFocusedItemIndex(), level: 0, parentKey: '' };\n\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n            this.searchValue = '';\n            this.dirty = false;\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'PageDown':\n                case 'PageUp':\n                case 'Backspace':\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n                        this.searchItems(event, event.key);\n                    }\n\n                    break;\n            }\n        },\n        onItemChange(event) {\n            const { processedItem, isFocus } = event;\n\n            if (ObjectUtils.isEmpty(processedItem)) return;\n\n            const { index, key, level, parentKey, items } = processedItem;\n            const grouped = ObjectUtils.isNotEmpty(items);\n            const activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== parentKey && p.parentKey !== key);\n\n            grouped && activeItemPath.push(processedItem);\n\n            this.focusedItemInfo = { index, level, parentKey };\n            this.activeItemPath = activeItemPath;\n\n            grouped && (this.dirty = true);\n            isFocus && DomHandler.focus(this.menubar);\n        },\n        onItemClick(event) {\n            const { originalEvent, processedItem } = event;\n            const grouped = this.isProccessedItemGroup(processedItem);\n            const root = ObjectUtils.isEmpty(processedItem.parent);\n            const selected = this.isSelected(processedItem);\n\n            if (selected) {\n                const { index, key, level, parentKey } = processedItem;\n\n                this.activeItemPath = this.activeItemPath.filter((p) => key !== p.key && key.startsWith(p.key));\n                this.focusedItemInfo = { index, level, parentKey };\n\n                this.dirty = !root;\n                DomHandler.focus(this.menubar);\n            } else {\n                if (grouped) {\n                    this.onItemChange(event);\n                } else {\n                    const rootProcessedItem = root ? processedItem : this.activeItemPath.find((p) => p.parentKey === '');\n\n                    this.hide(originalEvent);\n                    this.changeFocusedItemIndex(originalEvent, rootProcessedItem ? rootProcessedItem.index : -1);\n\n                    this.mobileActive = false;\n                    DomHandler.focus(this.menubar);\n                }\n            }\n        },\n        onItemMouseEnter(event) {\n            if (this.dirty) {\n                this.onItemChange(event);\n            }\n        },\n        onItemMouseMove(event) {\n            if (this.focused) {\n                this.changeFocusedItemIndex(event, event.processedItem.index);\n            }\n        },\n        menuButtonClick(event) {\n            this.toggle(event);\n        },\n        menuButtonKeydown(event) {\n            (event.code === 'Enter' || event.code === 'NumpadEnter' || event.code === 'Space') && this.menuButtonClick(event);\n        },\n        onArrowDownKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const root = processedItem ? ObjectUtils.isEmpty(processedItem.parent) : null;\n\n            if (root) {\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                if (grouped) {\n                    this.onItemChange({ originalEvent: event, processedItem });\n                    this.focusedItemInfo = { index: -1, parentKey: processedItem.key };\n                    this.onArrowRightKey(event);\n                }\n            } else {\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n                this.changeFocusedItemIndex(event, itemIndex);\n            }\n\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const root = ObjectUtils.isEmpty(processedItem.parent);\n\n            if (root) {\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                if (grouped) {\n                    this.onItemChange({ originalEvent: event, processedItem });\n                    this.focusedItemInfo = { index: -1, parentKey: processedItem.key };\n                    const itemIndex = this.findLastItemIndex();\n\n                    this.changeFocusedItemIndex(event, itemIndex);\n                }\n            } else {\n                const parentItem = this.activeItemPath.find((p) => p.key === processedItem.parentKey);\n\n                if (this.focusedItemInfo.index === 0) {\n                    this.focusedItemInfo = { index: -1, parentKey: parentItem ? parentItem.parentKey : '' };\n                    this.searchValue = '';\n                    this.onArrowLeftKey(event);\n                    this.activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== this.focusedItemInfo.parentKey);\n                } else {\n                    const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                    this.changeFocusedItemIndex(event, itemIndex);\n                }\n            }\n\n            event.preventDefault();\n        },\n        onArrowLeftKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const parentItem = processedItem ? this.activeItemPath.find((p) => p.key === processedItem.parentKey) : null;\n\n            if (parentItem) {\n                this.onItemChange({ originalEvent: event, processedItem: parentItem });\n                this.activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== this.focusedItemInfo.parentKey);\n\n                event.preventDefault();\n            } else {\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                this.changeFocusedItemIndex(event, itemIndex);\n                event.preventDefault();\n            }\n        },\n        onArrowRightKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const parentItem = processedItem ? this.activeItemPath.find((p) => p.key === processedItem.parentKey) : null;\n\n            if (parentItem) {\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                if (grouped) {\n                    this.onItemChange({ originalEvent: event, processedItem });\n                    this.focusedItemInfo = { index: -1, parentKey: processedItem.key };\n                    this.onArrowDownKey(event);\n                }\n            } else {\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n                this.changeFocusedItemIndex(event, itemIndex);\n                event.preventDefault();\n            }\n        },\n        onHomeKey(event) {\n            this.changeFocusedItemIndex(event, this.findFirstItemIndex());\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedItemIndex(event, this.findLastItemIndex());\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const element = DomHandler.findSingle(this.menubar, `li[id=\"${`${this.focusedItemId}`}\"]`);\n                const anchorElement = element && DomHandler.findSingle(element, 'a[data-pc-section=\"itemlink\"]');\n\n                anchorElement ? anchorElement.click() : element && element.click();\n\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && (this.focusedItemInfo.index = this.findFirstFocusedItemIndex());\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            if (this.focusedItemInfo.level !== 0) {\n                const _focusedItemInfo = this.focusedItemInfo;\n\n                this.hide(event, false);\n                this.focusedItemInfo = { index: Number(_focusedItemInfo.parentKey.split('_')[0]), level: 0, parentKey: '' };\n            }\n\n            event.preventDefault();\n        },\n        onTabKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && this.onItemChange({ originalEvent: event, processedItem });\n            }\n\n            this.hide();\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    const isOutsideContainer = this.container && !this.container.contains(event.target);\n                    const isOutsideTarget = !(this.target && (this.target === event.target || this.target.contains(event.target)));\n\n                    if (isOutsideContainer && isOutsideTarget) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = (event) => {\n                    if (!DomHandler.isTouchDevice()) {\n                        this.hide(event, true);\n                    }\n\n                    this.mobileActive = false;\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        bindMatchMediaListener() {\n            if (!this.matchMediaListener) {\n                const query = matchMedia(`(max-width: ${this.breakpoint})`);\n\n                this.query = query;\n                this.queryMatches = query.matches;\n\n                this.matchMediaListener = () => {\n                    this.queryMatches = query.matches;\n                    this.mobileActive = false;\n                };\n\n                this.query.addEventListener('change', this.matchMediaListener);\n            }\n        },\n        unbindMatchMediaListener() {\n            if (this.matchMediaListener) {\n                this.query.removeEventListener('change', this.matchMediaListener);\n                this.matchMediaListener = null;\n            }\n        },\n        isItemMatched(processedItem) {\n            return this.isValidItem(processedItem) && this.getProccessedItemLabel(processedItem)?.toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase());\n        },\n        isValidItem(processedItem) {\n            return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item) && this.isItemVisible(processedItem.item);\n        },\n        isValidSelectedItem(processedItem) {\n            return this.isValidItem(processedItem) && this.isSelected(processedItem);\n        },\n        isSelected(processedItem) {\n            return this.activeItemPath.some((p) => p.key === processedItem.key);\n        },\n        findFirstItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidItem(processedItem));\n        },\n        findLastItemIndex() {\n            return ObjectUtils.findLastIndex(this.visibleItems, (processedItem) => this.isValidItem(processedItem));\n        },\n        findNextItemIndex(index) {\n            const matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex((processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;\n        },\n        findPrevItemIndex(index) {\n            const matchedItemIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleItems.slice(0, index), (processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex : index;\n        },\n        findSelectedItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidSelectedItem(processedItem));\n        },\n        findFirstFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;\n        },\n        findLastFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;\n        },\n        searchItems(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let itemIndex = -1;\n            let matched = false;\n\n            if (this.focusedItemInfo.index !== -1) {\n                itemIndex = this.visibleItems.slice(this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem));\n                itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem)) : itemIndex + this.focusedItemInfo.index;\n            } else {\n                itemIndex = this.visibleItems.findIndex((processedItem) => this.isItemMatched(processedItem));\n            }\n\n            if (itemIndex !== -1) {\n                matched = true;\n            }\n\n            if (itemIndex === -1 && this.focusedItemInfo.index === -1) {\n                itemIndex = this.findFirstFocusedItemIndex();\n            }\n\n            if (itemIndex !== -1) {\n                this.changeFocusedItemIndex(event, itemIndex);\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedItemIndex(event, index) {\n            if (this.focusedItemInfo.index !== index) {\n                this.focusedItemInfo.index = index;\n                this.scrollInView();\n            }\n        },\n        scrollInView(index = -1) {\n            const id = index !== -1 ? `${this.id}_${index}` : this.focusedItemId;\n            const element = DomHandler.findSingle(this.menubar, `li[id=\"${id}\"]`);\n\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n            }\n        },\n        createProcessedItems(items, level = 0, parent = {}, parentKey = '') {\n            const processedItems = [];\n\n            items &&\n                items.forEach((item, index) => {\n                    const key = (parentKey !== '' ? parentKey + '_' : '') + index;\n                    const newItem = {\n                        item,\n                        index,\n                        level,\n                        key,\n                        parent,\n                        parentKey\n                    };\n\n                    newItem['items'] = this.createProcessedItems(item.items, level + 1, newItem, key);\n                    processedItems.push(newItem);\n                });\n\n            return processedItems;\n        },\n        containerRef(el) {\n            this.container = el;\n        },\n        menubarRef(el) {\n            this.menubar = el ? el.$el : undefined;\n        }\n    },\n    computed: {\n        processedItems() {\n            return this.createProcessedItems(this.model || []);\n        },\n        visibleItems() {\n            const processedItem = this.activeItemPath.find((p) => p.key === this.focusedItemInfo.parentKey);\n\n            return processedItem ? processedItem.items : this.processedItems;\n        },\n        focusedItemId() {\n            return this.focusedItemInfo.index !== -1 ? `${this.id}${ObjectUtils.isNotEmpty(this.focusedItemInfo.parentKey) ? '_' + this.focusedItemInfo.parentKey : ''}_${this.focusedItemInfo.index}` : null;\n        }\n    },\n    components: {\n        MenubarSub: MenubarSub,\n        BarsIcon: BarsIcon\n    }\n};\n</script>\n", "<template>\n    <div :ref=\"containerRef\" :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <div v-if=\"$slots.start\" :class=\"cx('start')\" v-bind=\"ptm('start')\">\n            <slot name=\"start\"></slot>\n        </div>\n        <slot :id=\"id\" :name=\"$slots.button ? 'button' : 'menubutton'\" :class=\"cx('button')\" :toggleCallback=\"(event) => menuButtonClick(event)\">\n            <!-- TODO: menubutton deprecated since v4.0-->\n            <a\n                v-if=\"model && model.length > 0\"\n                ref=\"menubutton\"\n                role=\"button\"\n                tabindex=\"0\"\n                :class=\"cx('button')\"\n                :aria-haspopup=\"model.length && model.length > 0 ? true : false\"\n                :aria-expanded=\"mobileActive\"\n                :aria-controls=\"id\"\n                :aria-label=\"$primevue.config.locale.aria?.navigation\"\n                @click=\"menuButtonClick($event)\"\n                @keydown=\"menuButtonKeydown($event)\"\n                v-bind=\"{ ...buttonProps, ...ptm('button') }\"\n            >\n                <!-- TODO: menubuttonicon deprecated since v4.0-->\n                <slot :name=\"$slots.buttonicon ? 'buttonicon' : 'menubuttonicon'\">\n                    <BarsIcon v-bind=\"ptm('buttonicon')\" />\n                </slot>\n            </a>\n        </slot>\n        <MenubarSub\n            :ref=\"menubarRef\"\n            :id=\"id + '_list'\"\n            role=\"menubar\"\n            :items=\"processedItems\"\n            :templates=\"$slots\"\n            :root=\"true\"\n            :mobileActive=\"mobileActive\"\n            tabindex=\"0\"\n            :aria-activedescendant=\"focused ? focusedItemId : undefined\"\n            :menuId=\"id\"\n            :focusedItemId=\"focused ? focusedItemId : undefined\"\n            :activeItemPath=\"activeItemPath\"\n            :level=\"0\"\n            :aria-labelledby=\"ariaLabelledby\"\n            :aria-label=\"ariaLabel\"\n            :pt=\"pt\"\n            :unstyled=\"unstyled\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @keydown=\"onKeyDown\"\n            @item-click=\"onItemClick\"\n            @item-mouseenter=\"onItemMouseEnter\"\n            @item-mousemove=\"onItemMouseMove\"\n        />\n        <div v-if=\"$slots.end\" :class=\"cx('end')\" v-bind=\"ptm('end')\">\n            <slot name=\"end\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { DomHandler, ObjectUtils, UniqueComponentId, ZIndexUtils } from '@primevue/core/utils';\nimport BarsIcon from '@primevue/icons/bars';\nimport BaseMenubar from './BaseMenubar.vue';\nimport MenubarSub from './MenubarSub.vue';\n\nexport default {\n    name: 'Menubar',\n    extends: BaseMenubar,\n    inheritAttrs: false,\n    emits: ['focus', 'blur'],\n    matchMediaListener: null,\n    data() {\n        return {\n            id: this.$attrs.id,\n            mobileActive: false,\n            focused: false,\n            focusedItemInfo: { index: -1, level: 0, parentKey: '' },\n            activeItemPath: [],\n            dirty: false,\n            query: null,\n            queryMatches: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        activeItemPath(newPath) {\n            if (ObjectUtils.isNotEmpty(newPath)) {\n                this.bindOutsideClickListener();\n                this.bindResizeListener();\n            } else {\n                this.unbindOutsideClickListener();\n                this.unbindResizeListener();\n            }\n        }\n    },\n    outsideClickListener: null,\n    container: null,\n    menubar: null,\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n        this.bindMatchMediaListener();\n    },\n    beforeUnmount() {\n        this.mobileActive = false;\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n        this.unbindMatchMediaListener();\n\n        if (this.container) {\n            ZIndexUtils.clear(this.container);\n        }\n\n        this.container = null;\n    },\n    methods: {\n        getItemProp(item, name) {\n            return item ? ObjectUtils.getItemValue(item[name]) : undefined;\n        },\n        getItemLabel(item) {\n            return this.getItemProp(item, 'label');\n        },\n        isItemDisabled(item) {\n            return this.getItemProp(item, 'disabled');\n        },\n        isItemVisible(item) {\n            return this.getItemProp(item, 'visible') !== false;\n        },\n        isItemGroup(item) {\n            return ObjectUtils.isNotEmpty(this.getItemProp(item, 'items'));\n        },\n        isItemSeparator(item) {\n            return this.getItemProp(item, 'separator');\n        },\n        getProccessedItemLabel(processedItem) {\n            return processedItem ? this.getItemLabel(processedItem.item) : undefined;\n        },\n        isProccessedItemGroup(processedItem) {\n            return processedItem && ObjectUtils.isNotEmpty(processedItem.items);\n        },\n        toggle(event) {\n            if (this.mobileActive) {\n                this.mobileActive = false;\n                ZIndexUtils.clear(this.menubar);\n                this.hide();\n            } else {\n                this.mobileActive = true;\n                ZIndexUtils.set('menu', this.menubar, this.$primevue.config.zIndex.menu);\n                setTimeout(() => {\n                    this.show();\n                }, 1);\n            }\n\n            this.bindOutsideClickListener();\n            event.preventDefault();\n        },\n        show() {\n            DomHandler.focus(this.menubar);\n        },\n        hide(event, isFocus) {\n            if (this.mobileActive) {\n                this.mobileActive = false;\n                setTimeout(() => {\n                    DomHandler.focus(this.$refs.menubutton);\n                }, 0);\n            }\n\n            this.activeItemPath = [];\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n\n            isFocus && DomHandler.focus(this.menubar);\n            this.dirty = false;\n        },\n        onFocus(event) {\n            this.focused = true;\n            this.focusedItemInfo = this.focusedItemInfo.index !== -1 ? this.focusedItemInfo : { index: this.findFirstFocusedItemIndex(), level: 0, parentKey: '' };\n\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n            this.searchValue = '';\n            this.dirty = false;\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'PageDown':\n                case 'PageUp':\n                case 'Backspace':\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n                        this.searchItems(event, event.key);\n                    }\n\n                    break;\n            }\n        },\n        onItemChange(event) {\n            const { processedItem, isFocus } = event;\n\n            if (ObjectUtils.isEmpty(processedItem)) return;\n\n            const { index, key, level, parentKey, items } = processedItem;\n            const grouped = ObjectUtils.isNotEmpty(items);\n            const activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== parentKey && p.parentKey !== key);\n\n            grouped && activeItemPath.push(processedItem);\n\n            this.focusedItemInfo = { index, level, parentKey };\n            this.activeItemPath = activeItemPath;\n\n            grouped && (this.dirty = true);\n            isFocus && DomHandler.focus(this.menubar);\n        },\n        onItemClick(event) {\n            const { originalEvent, processedItem } = event;\n            const grouped = this.isProccessedItemGroup(processedItem);\n            const root = ObjectUtils.isEmpty(processedItem.parent);\n            const selected = this.isSelected(processedItem);\n\n            if (selected) {\n                const { index, key, level, parentKey } = processedItem;\n\n                this.activeItemPath = this.activeItemPath.filter((p) => key !== p.key && key.startsWith(p.key));\n                this.focusedItemInfo = { index, level, parentKey };\n\n                this.dirty = !root;\n                DomHandler.focus(this.menubar);\n            } else {\n                if (grouped) {\n                    this.onItemChange(event);\n                } else {\n                    const rootProcessedItem = root ? processedItem : this.activeItemPath.find((p) => p.parentKey === '');\n\n                    this.hide(originalEvent);\n                    this.changeFocusedItemIndex(originalEvent, rootProcessedItem ? rootProcessedItem.index : -1);\n\n                    this.mobileActive = false;\n                    DomHandler.focus(this.menubar);\n                }\n            }\n        },\n        onItemMouseEnter(event) {\n            if (this.dirty) {\n                this.onItemChange(event);\n            }\n        },\n        onItemMouseMove(event) {\n            if (this.focused) {\n                this.changeFocusedItemIndex(event, event.processedItem.index);\n            }\n        },\n        menuButtonClick(event) {\n            this.toggle(event);\n        },\n        menuButtonKeydown(event) {\n            (event.code === 'Enter' || event.code === 'NumpadEnter' || event.code === 'Space') && this.menuButtonClick(event);\n        },\n        onArrowDownKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const root = processedItem ? ObjectUtils.isEmpty(processedItem.parent) : null;\n\n            if (root) {\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                if (grouped) {\n                    this.onItemChange({ originalEvent: event, processedItem });\n                    this.focusedItemInfo = { index: -1, parentKey: processedItem.key };\n                    this.onArrowRightKey(event);\n                }\n            } else {\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n                this.changeFocusedItemIndex(event, itemIndex);\n            }\n\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const root = ObjectUtils.isEmpty(processedItem.parent);\n\n            if (root) {\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                if (grouped) {\n                    this.onItemChange({ originalEvent: event, processedItem });\n                    this.focusedItemInfo = { index: -1, parentKey: processedItem.key };\n                    const itemIndex = this.findLastItemIndex();\n\n                    this.changeFocusedItemIndex(event, itemIndex);\n                }\n            } else {\n                const parentItem = this.activeItemPath.find((p) => p.key === processedItem.parentKey);\n\n                if (this.focusedItemInfo.index === 0) {\n                    this.focusedItemInfo = { index: -1, parentKey: parentItem ? parentItem.parentKey : '' };\n                    this.searchValue = '';\n                    this.onArrowLeftKey(event);\n                    this.activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== this.focusedItemInfo.parentKey);\n                } else {\n                    const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                    this.changeFocusedItemIndex(event, itemIndex);\n                }\n            }\n\n            event.preventDefault();\n        },\n        onArrowLeftKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const parentItem = processedItem ? this.activeItemPath.find((p) => p.key === processedItem.parentKey) : null;\n\n            if (parentItem) {\n                this.onItemChange({ originalEvent: event, processedItem: parentItem });\n                this.activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== this.focusedItemInfo.parentKey);\n\n                event.preventDefault();\n            } else {\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                this.changeFocusedItemIndex(event, itemIndex);\n                event.preventDefault();\n            }\n        },\n        onArrowRightKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const parentItem = processedItem ? this.activeItemPath.find((p) => p.key === processedItem.parentKey) : null;\n\n            if (parentItem) {\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                if (grouped) {\n                    this.onItemChange({ originalEvent: event, processedItem });\n                    this.focusedItemInfo = { index: -1, parentKey: processedItem.key };\n                    this.onArrowDownKey(event);\n                }\n            } else {\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n                this.changeFocusedItemIndex(event, itemIndex);\n                event.preventDefault();\n            }\n        },\n        onHomeKey(event) {\n            this.changeFocusedItemIndex(event, this.findFirstItemIndex());\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedItemIndex(event, this.findLastItemIndex());\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const element = DomHandler.findSingle(this.menubar, `li[id=\"${`${this.focusedItemId}`}\"]`);\n                const anchorElement = element && DomHandler.findSingle(element, 'a[data-pc-section=\"itemlink\"]');\n\n                anchorElement ? anchorElement.click() : element && element.click();\n\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && (this.focusedItemInfo.index = this.findFirstFocusedItemIndex());\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            if (this.focusedItemInfo.level !== 0) {\n                const _focusedItemInfo = this.focusedItemInfo;\n\n                this.hide(event, false);\n                this.focusedItemInfo = { index: Number(_focusedItemInfo.parentKey.split('_')[0]), level: 0, parentKey: '' };\n            }\n\n            event.preventDefault();\n        },\n        onTabKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && this.onItemChange({ originalEvent: event, processedItem });\n            }\n\n            this.hide();\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    const isOutsideContainer = this.container && !this.container.contains(event.target);\n                    const isOutsideTarget = !(this.target && (this.target === event.target || this.target.contains(event.target)));\n\n                    if (isOutsideContainer && isOutsideTarget) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = (event) => {\n                    if (!DomHandler.isTouchDevice()) {\n                        this.hide(event, true);\n                    }\n\n                    this.mobileActive = false;\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        bindMatchMediaListener() {\n            if (!this.matchMediaListener) {\n                const query = matchMedia(`(max-width: ${this.breakpoint})`);\n\n                this.query = query;\n                this.queryMatches = query.matches;\n\n                this.matchMediaListener = () => {\n                    this.queryMatches = query.matches;\n                    this.mobileActive = false;\n                };\n\n                this.query.addEventListener('change', this.matchMediaListener);\n            }\n        },\n        unbindMatchMediaListener() {\n            if (this.matchMediaListener) {\n                this.query.removeEventListener('change', this.matchMediaListener);\n                this.matchMediaListener = null;\n            }\n        },\n        isItemMatched(processedItem) {\n            return this.isValidItem(processedItem) && this.getProccessedItemLabel(processedItem)?.toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase());\n        },\n        isValidItem(processedItem) {\n            return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item) && this.isItemVisible(processedItem.item);\n        },\n        isValidSelectedItem(processedItem) {\n            return this.isValidItem(processedItem) && this.isSelected(processedItem);\n        },\n        isSelected(processedItem) {\n            return this.activeItemPath.some((p) => p.key === processedItem.key);\n        },\n        findFirstItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidItem(processedItem));\n        },\n        findLastItemIndex() {\n            return ObjectUtils.findLastIndex(this.visibleItems, (processedItem) => this.isValidItem(processedItem));\n        },\n        findNextItemIndex(index) {\n            const matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex((processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;\n        },\n        findPrevItemIndex(index) {\n            const matchedItemIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleItems.slice(0, index), (processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex : index;\n        },\n        findSelectedItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidSelectedItem(processedItem));\n        },\n        findFirstFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;\n        },\n        findLastFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;\n        },\n        searchItems(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let itemIndex = -1;\n            let matched = false;\n\n            if (this.focusedItemInfo.index !== -1) {\n                itemIndex = this.visibleItems.slice(this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem));\n                itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem)) : itemIndex + this.focusedItemInfo.index;\n            } else {\n                itemIndex = this.visibleItems.findIndex((processedItem) => this.isItemMatched(processedItem));\n            }\n\n            if (itemIndex !== -1) {\n                matched = true;\n            }\n\n            if (itemIndex === -1 && this.focusedItemInfo.index === -1) {\n                itemIndex = this.findFirstFocusedItemIndex();\n            }\n\n            if (itemIndex !== -1) {\n                this.changeFocusedItemIndex(event, itemIndex);\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedItemIndex(event, index) {\n            if (this.focusedItemInfo.index !== index) {\n                this.focusedItemInfo.index = index;\n                this.scrollInView();\n            }\n        },\n        scrollInView(index = -1) {\n            const id = index !== -1 ? `${this.id}_${index}` : this.focusedItemId;\n            const element = DomHandler.findSingle(this.menubar, `li[id=\"${id}\"]`);\n\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n            }\n        },\n        createProcessedItems(items, level = 0, parent = {}, parentKey = '') {\n            const processedItems = [];\n\n            items &&\n                items.forEach((item, index) => {\n                    const key = (parentKey !== '' ? parentKey + '_' : '') + index;\n                    const newItem = {\n                        item,\n                        index,\n                        level,\n                        key,\n                        parent,\n                        parentKey\n                    };\n\n                    newItem['items'] = this.createProcessedItems(item.items, level + 1, newItem, key);\n                    processedItems.push(newItem);\n                });\n\n            return processedItems;\n        },\n        containerRef(el) {\n            this.container = el;\n        },\n        menubarRef(el) {\n            this.menubar = el ? el.$el : undefined;\n        }\n    },\n    computed: {\n        processedItems() {\n            return this.createProcessedItems(this.model || []);\n        },\n        visibleItems() {\n            const processedItem = this.activeItemPath.find((p) => p.key === this.focusedItemInfo.parentKey);\n\n            return processedItem ? processedItem.items : this.processedItems;\n        },\n        focusedItemId() {\n            return this.focusedItemInfo.index !== -1 ? `${this.id}${ObjectUtils.isNotEmpty(this.focusedItemInfo.parentKey) ? '_' + this.focusedItemInfo.parentKey : ''}_${this.focusedItemInfo.index}` : null;\n        }\n    },\n    components: {\n        MenubarSub: MenubarSub,\n        BarsIcon: BarsIcon\n    }\n};\n</script>\n"],
  "mappings": "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",
  "names": ["theme", "_ref", "dt", "concat", "inlineStyles", "submenu", "_ref2", "instance", "processedItem", "display", "isItemActive", "classes", "root", "_ref3", "queryMatches", "mobileActive", "start", "button", "rootList", "item", "_ref4", "isItemFocused", "isItemDisabled", "itemContent", "itemLink", "itemIcon", "itemLabel", "submenuIcon", "separator", "end", "BaseStyle", "extend", "name", "name", "BaseComponent", "props", "model", "type", "Array", "buttonProps", "breakpoint", "String", "ariaLabelledby", "ariaLabel", "style", "MenubarStyle", "provide", "$pcMenubar", "$parentInstance", "hostName", "emits", "items", "root", "Boolean", "popup", "mobileActive", "templates", "Object", "level", "Number", "menuId", "focusedItemId", "activeItemPath", "list", "methods", "getItemId", "processedItem", "concat", "key", "getItemKey", "getItemProp", "params", "item", "ObjectUtils", "getItemValue", "undefined", "getItemLabel", "getItemLabelId", "getPTOptions", "index", "ptm", "context", "active", "isItemActive", "focused", "isItemFocused", "disabled", "isItemDisabled", "some", "path", "isItemVisible", "isItemGroup", "isNotEmpty", "onItemClick", "event", "originalEvent", "$emit", "isFocus", "onItemMouseEnter", "onItemMouseMove", "getAriaSetSize", "_this", "filter", "length", "getAriaPosInset", "_this2", "slice", "getMenuItemProps", "action", "mergeProps", "cx", "tabindex", "icon", "label", "submenuicon", "components", "AngleRightIcon", "AngleDownIcon", "directives", "ripple", "Ripple", "_openBlock", "_createElementBlock", "_mergeProps", "$props", "_ctx", "_Fragment", "_renderList", "$options", "id", "role", "_createElementVNode", "onClick", "$event", "onMouseenter", "onMousemove", "_withDirectives", "href", "target", "itemicon", "_createBlock", "_resolveDynamicComponent", "_toDisplayString", "_hoisted_4", "hasSubmenu", "_component_MenubarSub", "_normalizeStyle", "sx", "pt", "unstyled", "_cache", "onItemMouseenter", "onItemMousemove", "_hoisted_5", "script", "BaseMenubar", "inheritAttrs", "matchMediaListener", "data", "$attrs", "focusedItemInfo", "parentKey", "dirty", "query", "queryMatches", "watch", "$attrsId", "newValue", "UniqueComponentId", "newPath", "bindOutsideClickListener", "bindResizeListener", "unbindOutsideClickListener", "unbindResizeListener", "outsideClickListener", "container", "menubar", "mounted", "bindMatchMediaListener", "beforeUnmount", "unbindMatchMediaListener", "ZIndexUtils", "clear", "isItemSeparator", "getProccessedItemLabel", "isProccessedItemGroup", "toggle", "hide", "set", "$primevue", "config", "zIndex", "menu", "setTimeout", "show", "preventDefault", "DomHandler", "focus", "$refs", "menubutton", "onFocus", "findFirstFocusedItemIndex", "onBlur", "searchValue", "onKeyDown", "metaKey", "ctrlKey", "code", "onArrowDownKey", "onArrowUpKey", "onArrowLeftKey", "onArrowRightKey", "onHomeKey", "onEndKey", "onSpaceKey", "onEnterKey", "onEscapeKey", "onTabKey", "isPrintableCharacter", "searchItems", "onItemChange", "isEmpty", "grouped", "p", "push", "parent", "selected", "isSelected", "startsWith", "rootProcessedItem", "find", "changeFocusedItemIndex", "menuButtonClick", "menuButtonKeydown", "visibleItems", "itemIndex", "findNextItemIndex", "_this3", "findLastItemIndex", "parentItem", "findPrevItemIndex", "findLastFocusedItemIndex", "_this4", "findFirstItemIndex", "element", "findSingle", "anchorElement", "click", "_focusedItemInfo", "split", "_this5", "isOutsideContainer", "contains", "isOutsideTarget", "document", "addEventListener", "removeEventListener", "_this6", "resizeListener", "isTouchDevice", "window", "_this7", "matchMedia", "matches", "isItemMatched", "_this$getProccessedIt", "isValidItem", "toLocaleLowerCase", "isValidSelectedItem", "_this8", "findIndex", "_this9", "findLastIndex", "_this10", "matchedItemIndex", "_this11", "findSelectedItemIndex", "_this12", "selectedIndex", "char", "_this13", "matched", "searchTimeout", "clearTimeout", "scrollInView", "scrollIntoView", "block", "inline", "createProcessedItems", "_this14", "arguments", "processedItems", "forEach", "newItem", "containerRef", "el", "menubarRef", "$el", "computed", "_this15", "MenubarSub", "BarsIcon", "ref", "ptmi", "$slots", "start", "_renderSlot", "button", "$data", "toggleCallback", "_ctx$$primevue$config", "locale", "aria", "navigation", "onKeydown", "_objectSpread", "buttonicon", "_createVNode", "_component_BarsIcon", "end"]
}
