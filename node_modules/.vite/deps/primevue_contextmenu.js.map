{
  "version": 3,
  "sources": ["../../src/contextmenu/style/ContextMenuStyle.js", "../../src/contextmenu/BaseContextMenu.vue", "../../src/contextmenu/ContextMenuSub.vue", "../../src/contextmenu/ContextMenuSub.vue?vue&type=template&id=4d954d4d&lang.js", "../../src/contextmenu/ContextMenu.vue", "../../src/contextmenu/ContextMenu.vue?vue&type=template&id=38908c0e&lang.js"],
  "sourcesContent": ["import BaseStyle from '@primevue/core/base/style';\n\nconst theme = ({ dt }) => `\n.p-contextmenu {\n    background: ${dt('contextmenu.background')};\n    color: ${dt('contextmenu.color')};\n    border: 1px solid ${dt('contextmenu.border.color')};\n    border-radius: ${dt('contextmenu.border.radius')};\n    box-shadow: ${dt('contextmenu.shadow')};\n    min-width: 12.5rem;\n}\n\n.p-contextmenu-root-list,\n.p-contextmenu-submenu {\n    margin: 0;\n    padding: ${dt('contextmenu.list.padding')};\n    list-style: none;\n    outline: 0 none;\n    display: flex;\n    flex-direction: column;\n    gap: ${dt('contextmenu.list.gap')};\n}\n\n.p-contextmenu-submenu {\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    min-width: 100%;\n    z-index: 1;\n    background: ${dt('contextmenu.background')};\n    color: ${dt('contextmenu.color')};\n    border: 1px solid ${dt('contextmenu.border.color')};\n    border-radius: ${dt('contextmenu.border.radius')};\n    box-shadow: ${dt('contextmenu.shadow')};\n}\n\n.p-contextmenu-item {\n    position: relative;\n}\n\n.p-contextmenu-item-content {\n    transition: background ${dt('contextmenu.transition.duration')}, color ${dt('contextmenu.transition.duration')};\n    border-radius: ${dt('contextmenu.item.border.radius')};\n    color: ${dt('contextmenu.item.color')};\n}\n\n.p-contextmenu-item-link {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    overflow: hidden;\n    position: relative;\n    color: inherit;\n    padding: ${dt('contextmenu.item.padding')};\n    gap: ${dt('contextmenu.item.gap')};\n    user-select: none;\n}\n\n.p-contextmenu-item-label {\n    line-height: 1;\n}\n\n.p-contextmenu-item-icon {\n    color: ${dt('contextmenu.item.icon.color')};\n}\n\n.p-contextmenu-submenu-icon {\n    color: ${dt('contextmenu.submenu.icon.color')};\n    margin-left: auto;\n    font-size: ${dt('contextmenu.submenu.icon.size')};\n    width: ${dt('contextmenu.submenu.icon.size')};\n    height: ${dt('contextmenu.submenu.icon.size')};\n}\n\n.p-contextmenu-item.p-focus > .p-contextmenu-item-content {\n    color: ${dt('contextmenu.item.focus.color')};\n    background: ${dt('contextmenu.item.focus.background')};\n}\n\n.p-contextmenu-item.p-focus > .p-contextmenu-item-content .p-contextmenu-item-icon {\n    color: ${dt('contextmenu.item.icon.focus.color')};\n}\n\n.p-contextmenu-item.p-focus > .p-contextmenu-item-content .p-contextmenu-submenu-icon {\n    color: ${dt('contextmenu.submenu.icon.focus.color')};\n}\n\n.p-contextmenu-item:not(.p-disabled) > .p-contextmenu-item-content:hover {\n    color: ${dt('contextmenu.item.focus.color')};\n    background: ${dt('contextmenu.item.focus.background')};\n}\n\n.p-contextmenu-item:not(.p-disabled) > .p-contextmenu-item-content:hover .p-contextmenu-item-icon {\n    color: ${dt('contextmenu.item.icon.focus.color')};\n}\n\n.p-contextmenu-item:not(.p-disabled) > .p-contextmenu-item-content:hover .p-contextmenu-submenu-icon {\n    color: ${dt('contextmenu.submenu.icon.focus.color')};\n}\n\n.p-contextmenu-item-active > .p-contextmenu-item-content {\n    color: ${dt('contextmenu.item.active.color')};\n    background: ${dt('contextmenu.item.active.background')};\n}\n\n.p-contextmenu-item-active > .p-contextmenu-item-content .p-contextmenu-item-icon {\n    color: ${dt('contextmenu.item.icon.active.color')};\n}\n\n.p-contextmenu-item-active > .p-contextmenu-item-content .p-contextmenu-submenu-icon {\n    color: ${dt('contextmenu.submenu.icon.active.color')};\n}\n\n.p-contextmenu-separator {\n    border-top: 1px solid  ${dt('contextmenu.separator.border.color')};\n}\n\n.p-contextmenu-enter-from,\n.p-contextmenu-leave-active {\n    opacity: 0;\n}\n\n.p-contextmenu-enter-active {\n    transition: opacity 250ms;\n}\n`;\n\nconst classes = {\n    root: 'p-contextmenu p-component',\n    rootList: 'p-contextmenu-root-list',\n    item: ({ instance, processedItem }) => [\n        'p-contextmenu-item',\n        {\n            'p-contextmenu-item-active': instance.isItemActive(processedItem),\n            'p-focus': instance.isItemFocused(processedItem),\n            'p-disabled': instance.isItemDisabled(processedItem)\n        }\n    ],\n    itemContent: 'p-contextmenu-item-content',\n    itemLink: 'p-contextmenu-item-link',\n    itemIcon: 'p-contextmenu-item-icon',\n    itemLabel: 'p-contextmenu-item-label',\n    submenuIcon: 'p-contextmenu-submenu-icon',\n    submenu: 'p-contextmenu-submenu',\n    separator: 'p-contextmenu-separator'\n};\n\nexport default BaseStyle.extend({\n    name: 'contextmenu',\n    theme,\n    classes\n});\n", "<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport ContextMenuStyle from 'primevue/contextmenu/style';\n\nexport default {\n    name: 'BaseContextMenu',\n    extends: BaseComponent,\n    props: {\n        model: {\n            type: Array,\n            default: null\n        },\n        appendTo: {\n            type: [String, Object],\n            default: 'body'\n        },\n        autoZIndex: {\n            type: Boolean,\n            default: true\n        },\n        baseZIndex: {\n            type: Number,\n            default: 0\n        },\n        global: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        }\n    },\n    style: ContextMenuStyle,\n    provide() {\n        return {\n            $pcContextMenu: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n", "<template>\n    <transition name=\"p-contextmenusub\" @enter=\"onEnter\" v-bind=\"ptm('menu.transition')\">\n        <ul v-if=\"root ? true : visible\" ref=\"container\" :tabindex=\"tabindex\" v-bind=\"ptm('rootList')\">\n            <template v-for=\"(processedItem, index) of items\" :key=\"getItemKey(processedItem)\">\n                <li\n                    v-if=\"isItemVisible(processedItem) && !getItemProp(processedItem, 'separator')\"\n                    :id=\"getItemId(processedItem)\"\n                    :style=\"getItemProp(processedItem, 'style')\"\n                    :class=\"[cx('item', { processedItem }), getItemProp(processedItem, 'class')]\"\n                    role=\"menuitem\"\n                    :aria-label=\"getItemLabel(processedItem)\"\n                    :aria-disabled=\"isItemDisabled(processedItem) || undefined\"\n                    :aria-expanded=\"isItemGroup(processedItem) ? isItemActive(processedItem) : undefined\"\n                    :aria-haspopup=\"isItemGroup(processedItem) && !getItemProp(processedItem, 'to') ? 'menu' : undefined\"\n                    :aria-level=\"level + 1\"\n                    :aria-setsize=\"getAriaSetSize()\"\n                    :aria-posinset=\"getAriaPosInset(index)\"\n                    v-bind=\"getPTOptions('item', processedItem, index)\"\n                    :data-p-active=\"isItemActive(processedItem)\"\n                    :data-p-focused=\"isItemFocused(processedItem)\"\n                    :data-p-disabled=\"isItemDisabled(processedItem)\"\n                >\n                    <div\n                        :class=\"cx('itemContent')\"\n                        @click=\"onItemClick($event, processedItem)\"\n                        @mouseenter=\"onItemMouseEnter($event, processedItem)\"\n                        @mousemove=\"onItemMouseMove($event, processedItem)\"\n                        v-bind=\"getPTOptions('itemContent', processedItem, index)\"\n                    >\n                        <template v-if=\"!templates.item\">\n                            <a v-ripple :href=\"getItemProp(processedItem, 'url')\" :class=\"cx('itemLink')\" :target=\"getItemProp(processedItem, 'target')\" tabindex=\"-1\" aria-hidden=\"true\" v-bind=\"getPTOptions('itemLink', processedItem, index)\">\n                                <component v-if=\"templates.itemicon\" :is=\"templates.itemicon\" :item=\"processedItem.item\" :class=\"cx('itemIcon')\" />\n                                <span v-else-if=\"getItemProp(processedItem, 'icon')\" :class=\"[cx('itemIcon'), getItemProp(processedItem, 'icon')]\" v-bind=\"getPTOptions('itemIcon', processedItem, index)\" />\n                                <span :id=\"getItemLabelId(processedItem)\" :class=\"cx('itemLabel')\" v-bind=\"getPTOptions('itemLabel', processedItem, index)\">{{ getItemLabel(processedItem) }}</span>\n                                <template v-if=\"getItemProp(processedItem, 'items')\">\n                                    <component v-if=\"templates.submenuicon\" :is=\"templates.submenuicon\" :active=\"isItemActive(processedItem)\" :class=\"cx('submenuIcon')\" />\n                                    <AngleRightIcon v-else :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions('submenuicon', processedItem, index)\" />\n                                </template>\n                            </a>\n                        </template>\n                        <component v-else :is=\"templates.item\" :item=\"processedItem.item\" :hasSubmenu=\"getItemProp(processedItem, 'items')\" :label=\"getItemLabel(processedItem)\" :props=\"getMenuItemProps(processedItem, index)\"></component>\n                    </div>\n                    <ContextMenuSub\n                        v-if=\"isItemVisible(processedItem) && isItemGroup(processedItem)\"\n                        :id=\"getItemId(processedItem) + '_list'\"\n                        role=\"menu\"\n                        :class=\"cx('submenu')\"\n                        :menuId=\"menuId\"\n                        :focusedItemId=\"focusedItemId\"\n                        :items=\"processedItem.items\"\n                        :templates=\"templates\"\n                        :activeItemPath=\"activeItemPath\"\n                        :level=\"level + 1\"\n                        :visible=\"isItemActive(processedItem) && isItemGroup(processedItem)\"\n                        :pt=\"pt\"\n                        :unstyled=\"unstyled\"\n                        @item-click=\"$emit('item-click', $event)\"\n                        @item-mouseenter=\"$emit('item-mouseenter', $event)\"\n                        @item-mousemove=\"$emit('item-mousemove', $event)\"\n                        :aria-labelledby=\"getItemLabelId(processedItem)\"\n                        v-bind=\"ptm('submenu')\"\n                    />\n                </li>\n                <li\n                    v-if=\"isItemVisible(processedItem) && getItemProp(processedItem, 'separator')\"\n                    :id=\"getItemId(processedItem)\"\n                    :style=\"getItemProp(processedItem, 'style')\"\n                    :class=\"[cx('separator'), getItemProp(processedItem, 'class')]\"\n                    role=\"separator\"\n                    v-bind=\"ptm('separator')\"\n                ></li>\n            </template>\n        </ul>\n    </transition>\n</template>\n\n<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport { DomHandler, ObjectUtils } from '@primevue/core/utils';\nimport AngleRightIcon from '@primevue/icons/angleright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'ContextMenuSub',\n    hostName: 'ContextMenu',\n    extends: BaseComponent,\n    emits: ['item-click', 'item-mouseenter', 'item-mousemove'],\n    props: {\n        items: {\n            type: Array,\n            default: null\n        },\n        menuId: {\n            type: String,\n            default: null\n        },\n        focusedItemId: {\n            type: String,\n            default: null\n        },\n        root: {\n            type: Boolean,\n            default: false\n        },\n        visible: {\n            type: Boolean,\n            default: false\n        },\n        level: {\n            type: Number,\n            default: 0\n        },\n        templates: {\n            type: Object,\n            default: null\n        },\n        activeItemPath: {\n            type: Object,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        }\n    },\n    methods: {\n        getItemId(processedItem) {\n            return `${this.menuId}_${processedItem.key}`;\n        },\n        getItemKey(processedItem) {\n            return this.getItemId(processedItem);\n        },\n        getItemProp(processedItem, name, params) {\n            return processedItem && processedItem.item ? ObjectUtils.getItemValue(processedItem.item[name], params) : undefined;\n        },\n        getItemLabel(processedItem) {\n            return this.getItemProp(processedItem, 'label');\n        },\n        getItemLabelId(processedItem) {\n            return `${this.menuId}_${processedItem.key}_label`;\n        },\n        getPTOptions(key, processedItem, index) {\n            return this.ptm(key, {\n                context: {\n                    item: processedItem,\n                    active: this.isItemActive(processedItem),\n                    focused: this.isItemFocused(processedItem),\n                    disabled: this.isItemDisabled(processedItem),\n                    index\n                }\n            });\n        },\n        isItemActive(processedItem) {\n            return this.activeItemPath.some((path) => path.key === processedItem.key);\n        },\n        isItemVisible(processedItem) {\n            return this.getItemProp(processedItem, 'visible') !== false;\n        },\n        isItemDisabled(processedItem) {\n            return this.getItemProp(processedItem, 'disabled');\n        },\n        isItemFocused(processedItem) {\n            return this.focusedItemId === this.getItemId(processedItem);\n        },\n        isItemGroup(processedItem) {\n            return ObjectUtils.isNotEmpty(processedItem.items);\n        },\n        onItemClick(event, processedItem) {\n            this.getItemProp(processedItem, 'command', { originalEvent: event, item: processedItem.item });\n            this.$emit('item-click', { originalEvent: event, processedItem, isFocus: true });\n        },\n        onItemMouseEnter(event, processedItem) {\n            this.$emit('item-mouseenter', { originalEvent: event, processedItem });\n        },\n        onItemMouseMove(event, processedItem) {\n            this.$emit('item-mousemove', { originalEvent: event, processedItem, isFocus: true });\n        },\n        getAriaSetSize() {\n            return this.items.filter((processedItem) => this.isItemVisible(processedItem) && !this.getItemProp(processedItem, 'separator')).length;\n        },\n        getAriaPosInset(index) {\n            return index - this.items.slice(0, index).filter((processedItem) => this.isItemVisible(processedItem) && this.getItemProp(processedItem, 'separator')).length + 1;\n        },\n        onEnter() {\n            DomHandler.nestedPosition(this.$refs.container, this.level);\n        },\n        getMenuItemProps(processedItem, index) {\n            return {\n                action: mergeProps(\n                    {\n                        class: this.cx('itemLink'),\n                        tabindex: -1,\n                        'aria-hidden': true\n                    },\n                    this.getPTOptions('itemLink', processedItem, index)\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n                    },\n                    this.getPTOptions('itemIcon', processedItem, index)\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('itemLabel')\n                    },\n                    this.getPTOptions('itemLabel', processedItem, index)\n                ),\n                submenuicon: mergeProps(\n                    {\n                        class: this.cx('submenuIcon')\n                    },\n                    this.getPTOptions('submenuicon', processedItem, index)\n                )\n            };\n        }\n    },\n\n    components: {\n        AngleRightIcon: AngleRightIcon\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n", "<template>\n    <transition name=\"p-contextmenusub\" @enter=\"onEnter\" v-bind=\"ptm('menu.transition')\">\n        <ul v-if=\"root ? true : visible\" ref=\"container\" :tabindex=\"tabindex\" v-bind=\"ptm('rootList')\">\n            <template v-for=\"(processedItem, index) of items\" :key=\"getItemKey(processedItem)\">\n                <li\n                    v-if=\"isItemVisible(processedItem) && !getItemProp(processedItem, 'separator')\"\n                    :id=\"getItemId(processedItem)\"\n                    :style=\"getItemProp(processedItem, 'style')\"\n                    :class=\"[cx('item', { processedItem }), getItemProp(processedItem, 'class')]\"\n                    role=\"menuitem\"\n                    :aria-label=\"getItemLabel(processedItem)\"\n                    :aria-disabled=\"isItemDisabled(processedItem) || undefined\"\n                    :aria-expanded=\"isItemGroup(processedItem) ? isItemActive(processedItem) : undefined\"\n                    :aria-haspopup=\"isItemGroup(processedItem) && !getItemProp(processedItem, 'to') ? 'menu' : undefined\"\n                    :aria-level=\"level + 1\"\n                    :aria-setsize=\"getAriaSetSize()\"\n                    :aria-posinset=\"getAriaPosInset(index)\"\n                    v-bind=\"getPTOptions('item', processedItem, index)\"\n                    :data-p-active=\"isItemActive(processedItem)\"\n                    :data-p-focused=\"isItemFocused(processedItem)\"\n                    :data-p-disabled=\"isItemDisabled(processedItem)\"\n                >\n                    <div\n                        :class=\"cx('itemContent')\"\n                        @click=\"onItemClick($event, processedItem)\"\n                        @mouseenter=\"onItemMouseEnter($event, processedItem)\"\n                        @mousemove=\"onItemMouseMove($event, processedItem)\"\n                        v-bind=\"getPTOptions('itemContent', processedItem, index)\"\n                    >\n                        <template v-if=\"!templates.item\">\n                            <a v-ripple :href=\"getItemProp(processedItem, 'url')\" :class=\"cx('itemLink')\" :target=\"getItemProp(processedItem, 'target')\" tabindex=\"-1\" aria-hidden=\"true\" v-bind=\"getPTOptions('itemLink', processedItem, index)\">\n                                <component v-if=\"templates.itemicon\" :is=\"templates.itemicon\" :item=\"processedItem.item\" :class=\"cx('itemIcon')\" />\n                                <span v-else-if=\"getItemProp(processedItem, 'icon')\" :class=\"[cx('itemIcon'), getItemProp(processedItem, 'icon')]\" v-bind=\"getPTOptions('itemIcon', processedItem, index)\" />\n                                <span :id=\"getItemLabelId(processedItem)\" :class=\"cx('itemLabel')\" v-bind=\"getPTOptions('itemLabel', processedItem, index)\">{{ getItemLabel(processedItem) }}</span>\n                                <template v-if=\"getItemProp(processedItem, 'items')\">\n                                    <component v-if=\"templates.submenuicon\" :is=\"templates.submenuicon\" :active=\"isItemActive(processedItem)\" :class=\"cx('submenuIcon')\" />\n                                    <AngleRightIcon v-else :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions('submenuicon', processedItem, index)\" />\n                                </template>\n                            </a>\n                        </template>\n                        <component v-else :is=\"templates.item\" :item=\"processedItem.item\" :hasSubmenu=\"getItemProp(processedItem, 'items')\" :label=\"getItemLabel(processedItem)\" :props=\"getMenuItemProps(processedItem, index)\"></component>\n                    </div>\n                    <ContextMenuSub\n                        v-if=\"isItemVisible(processedItem) && isItemGroup(processedItem)\"\n                        :id=\"getItemId(processedItem) + '_list'\"\n                        role=\"menu\"\n                        :class=\"cx('submenu')\"\n                        :menuId=\"menuId\"\n                        :focusedItemId=\"focusedItemId\"\n                        :items=\"processedItem.items\"\n                        :templates=\"templates\"\n                        :activeItemPath=\"activeItemPath\"\n                        :level=\"level + 1\"\n                        :visible=\"isItemActive(processedItem) && isItemGroup(processedItem)\"\n                        :pt=\"pt\"\n                        :unstyled=\"unstyled\"\n                        @item-click=\"$emit('item-click', $event)\"\n                        @item-mouseenter=\"$emit('item-mouseenter', $event)\"\n                        @item-mousemove=\"$emit('item-mousemove', $event)\"\n                        :aria-labelledby=\"getItemLabelId(processedItem)\"\n                        v-bind=\"ptm('submenu')\"\n                    />\n                </li>\n                <li\n                    v-if=\"isItemVisible(processedItem) && getItemProp(processedItem, 'separator')\"\n                    :id=\"getItemId(processedItem)\"\n                    :style=\"getItemProp(processedItem, 'style')\"\n                    :class=\"[cx('separator'), getItemProp(processedItem, 'class')]\"\n                    role=\"separator\"\n                    v-bind=\"ptm('separator')\"\n                ></li>\n            </template>\n        </ul>\n    </transition>\n</template>\n\n<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport { DomHandler, ObjectUtils } from '@primevue/core/utils';\nimport AngleRightIcon from '@primevue/icons/angleright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'ContextMenuSub',\n    hostName: 'ContextMenu',\n    extends: BaseComponent,\n    emits: ['item-click', 'item-mouseenter', 'item-mousemove'],\n    props: {\n        items: {\n            type: Array,\n            default: null\n        },\n        menuId: {\n            type: String,\n            default: null\n        },\n        focusedItemId: {\n            type: String,\n            default: null\n        },\n        root: {\n            type: Boolean,\n            default: false\n        },\n        visible: {\n            type: Boolean,\n            default: false\n        },\n        level: {\n            type: Number,\n            default: 0\n        },\n        templates: {\n            type: Object,\n            default: null\n        },\n        activeItemPath: {\n            type: Object,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        }\n    },\n    methods: {\n        getItemId(processedItem) {\n            return `${this.menuId}_${processedItem.key}`;\n        },\n        getItemKey(processedItem) {\n            return this.getItemId(processedItem);\n        },\n        getItemProp(processedItem, name, params) {\n            return processedItem && processedItem.item ? ObjectUtils.getItemValue(processedItem.item[name], params) : undefined;\n        },\n        getItemLabel(processedItem) {\n            return this.getItemProp(processedItem, 'label');\n        },\n        getItemLabelId(processedItem) {\n            return `${this.menuId}_${processedItem.key}_label`;\n        },\n        getPTOptions(key, processedItem, index) {\n            return this.ptm(key, {\n                context: {\n                    item: processedItem,\n                    active: this.isItemActive(processedItem),\n                    focused: this.isItemFocused(processedItem),\n                    disabled: this.isItemDisabled(processedItem),\n                    index\n                }\n            });\n        },\n        isItemActive(processedItem) {\n            return this.activeItemPath.some((path) => path.key === processedItem.key);\n        },\n        isItemVisible(processedItem) {\n            return this.getItemProp(processedItem, 'visible') !== false;\n        },\n        isItemDisabled(processedItem) {\n            return this.getItemProp(processedItem, 'disabled');\n        },\n        isItemFocused(processedItem) {\n            return this.focusedItemId === this.getItemId(processedItem);\n        },\n        isItemGroup(processedItem) {\n            return ObjectUtils.isNotEmpty(processedItem.items);\n        },\n        onItemClick(event, processedItem) {\n            this.getItemProp(processedItem, 'command', { originalEvent: event, item: processedItem.item });\n            this.$emit('item-click', { originalEvent: event, processedItem, isFocus: true });\n        },\n        onItemMouseEnter(event, processedItem) {\n            this.$emit('item-mouseenter', { originalEvent: event, processedItem });\n        },\n        onItemMouseMove(event, processedItem) {\n            this.$emit('item-mousemove', { originalEvent: event, processedItem, isFocus: true });\n        },\n        getAriaSetSize() {\n            return this.items.filter((processedItem) => this.isItemVisible(processedItem) && !this.getItemProp(processedItem, 'separator')).length;\n        },\n        getAriaPosInset(index) {\n            return index - this.items.slice(0, index).filter((processedItem) => this.isItemVisible(processedItem) && this.getItemProp(processedItem, 'separator')).length + 1;\n        },\n        onEnter() {\n            DomHandler.nestedPosition(this.$refs.container, this.level);\n        },\n        getMenuItemProps(processedItem, index) {\n            return {\n                action: mergeProps(\n                    {\n                        class: this.cx('itemLink'),\n                        tabindex: -1,\n                        'aria-hidden': true\n                    },\n                    this.getPTOptions('itemLink', processedItem, index)\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n                    },\n                    this.getPTOptions('itemIcon', processedItem, index)\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('itemLabel')\n                    },\n                    this.getPTOptions('itemLabel', processedItem, index)\n                ),\n                submenuicon: mergeProps(\n                    {\n                        class: this.cx('submenuIcon')\n                    },\n                    this.getPTOptions('submenuicon', processedItem, index)\n                )\n            };\n        }\n    },\n\n    components: {\n        AngleRightIcon: AngleRightIcon\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n", "<template>\n    <Portal :appendTo=\"appendTo\">\n        <transition name=\"p-contextmenu\" @enter=\"onEnter\" @after-enter=\"onAfterEnter\" @leave=\"onLeave\" @after-leave=\"onAfterLeave\" v-bind=\"ptm('transition')\">\n            <div v-if=\"visible\" :ref=\"containerRef\" :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n                <ContextMenuSub\n                    :ref=\"listRef\"\n                    :id=\"id + '_list'\"\n                    :class=\"cx('rootList')\"\n                    role=\"menubar\"\n                    :root=\"true\"\n                    :tabindex=\"tabindex\"\n                    aria-orientation=\"vertical\"\n                    :aria-activedescendant=\"focused ? focusedItemIdx : undefined\"\n                    :menuId=\"id\"\n                    :focusedItemId=\"focused ? focusedItemIdx : undefined\"\n                    :items=\"processedItems\"\n                    :templates=\"$slots\"\n                    :activeItemPath=\"activeItemPath\"\n                    :aria-labelledby=\"ariaLabelledby\"\n                    :aria-label=\"ariaLabel\"\n                    :level=\"0\"\n                    :visible=\"submenuVisible\"\n                    :pt=\"pt\"\n                    :unstyled=\"unstyled\"\n                    @focus=\"onFocus\"\n                    @blur=\"onBlur\"\n                    @keydown=\"onKeyDown\"\n                    @item-click=\"onItemClick\"\n                    @item-mouseenter=\"onItemMouseEnter\"\n                    @item-mousemove=\"onItemMouseMove\"\n                />\n            </div>\n        </transition>\n    </Portal>\n</template>\n\n<script>\nimport { DomHandler, ObjectUtils, UniqueComponentId, ZIndexUtils } from '@primevue/core/utils';\nimport Portal from 'primevue/portal';\nimport BaseContextMenu from './BaseContextMenu.vue';\nimport ContextMenuSub from './ContextMenuSub.vue';\n\nexport default {\n    name: 'ContextMenu',\n    extends: BaseContextMenu,\n    inheritAttrs: false,\n    emits: ['focus', 'blur', 'show', 'hide', 'before-show', 'before-hide'],\n    target: null,\n    outsideClickListener: null,\n    resizeListener: null,\n    documentContextMenuListener: null,\n    pageX: null,\n    pageY: null,\n    container: null,\n    list: null,\n    data() {\n        return {\n            id: this.$attrs.id,\n            focused: false,\n            focusedItemInfo: { index: -1, level: 0, parentKey: '' },\n            activeItemPath: [],\n            visible: false,\n            submenuVisible: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        activeItemPath(newPath) {\n            if (ObjectUtils.isNotEmpty(newPath)) {\n                this.bindOutsideClickListener();\n                this.bindResizeListener();\n            } else if (!this.visible) {\n                this.unbindOutsideClickListener();\n                this.unbindResizeListener();\n            }\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n\n        if (this.global) {\n            this.bindDocumentContextMenuListener();\n        }\n    },\n    beforeUnmount() {\n        this.unbindResizeListener();\n        this.unbindOutsideClickListener();\n        this.unbindDocumentContextMenuListener();\n\n        if (this.container && this.autoZIndex) {\n            ZIndexUtils.clear(this.container);\n        }\n\n        this.target = null;\n        this.container = null;\n    },\n    methods: {\n        getItemProp(item, name) {\n            return item ? ObjectUtils.getItemValue(item[name]) : undefined;\n        },\n        getItemLabel(item) {\n            return this.getItemProp(item, 'label');\n        },\n        isItemDisabled(item) {\n            return this.getItemProp(item, 'disabled');\n        },\n        isItemVisible(item) {\n            return this.getItemProp(item, 'visible') !== false;\n        },\n        isItemGroup(item) {\n            return ObjectUtils.isNotEmpty(this.getItemProp(item, 'items'));\n        },\n        isItemSeparator(item) {\n            return this.getItemProp(item, 'separator');\n        },\n        getProccessedItemLabel(processedItem) {\n            return processedItem ? this.getItemLabel(processedItem.item) : undefined;\n        },\n        isProccessedItemGroup(processedItem) {\n            return processedItem && ObjectUtils.isNotEmpty(processedItem.items);\n        },\n        toggle(event) {\n            this.visible ? this.hide() : this.show(event);\n        },\n        show(event) {\n            this.$emit('before-show');\n            this.activeItemPath = [];\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n            DomHandler.focus(this.list);\n\n            this.pageX = event.pageX;\n            this.pageY = event.pageY;\n            this.visible ? this.position() : (this.visible = true);\n\n            event.stopPropagation();\n            event.preventDefault();\n        },\n        hide() {\n            this.$emit('before-hide');\n            this.visible = false;\n            this.activeItemPath = [];\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n        },\n        onFocus(event) {\n            this.focused = true;\n            this.focusedItemInfo = this.focusedItemInfo.index !== -1 ? this.focusedItemInfo : { index: -1, level: 0, parentKey: '' };\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n            this.searchValue = '';\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'PageDown':\n                case 'PageUp':\n                case 'Backspace':\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n                        this.searchItems(event, event.key);\n                    }\n\n                    break;\n            }\n        },\n        onItemChange(event) {\n            const { processedItem, isFocus } = event;\n\n            if (ObjectUtils.isEmpty(processedItem)) return;\n\n            const { index, key, level, parentKey, items } = processedItem;\n            const grouped = ObjectUtils.isNotEmpty(items);\n            const activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== parentKey && p.parentKey !== key);\n\n            if (grouped) {\n                activeItemPath.push(processedItem);\n                this.submenuVisible = true;\n            }\n\n            this.focusedItemInfo = { index, level, parentKey };\n            this.activeItemPath = activeItemPath;\n\n            isFocus && DomHandler.focus(this.list);\n        },\n        onItemClick(event) {\n            const { processedItem } = event;\n            const grouped = this.isProccessedItemGroup(processedItem);\n            const selected = this.isSelected(processedItem);\n\n            if (selected) {\n                const { index, key, level, parentKey } = processedItem;\n\n                this.activeItemPath = this.activeItemPath.filter((p) => key !== p.key && key.startsWith(p.key));\n                this.focusedItemInfo = { index, level, parentKey };\n\n                DomHandler.focus(this.list);\n            } else {\n                grouped ? this.onItemChange(event) : this.hide();\n            }\n        },\n        onItemMouseEnter(event) {\n            this.onItemChange(event);\n        },\n        onItemMouseMove(event) {\n            if (this.focused) {\n                this.changeFocusedItemIndex(event, event.processedItem.index);\n            }\n        },\n        onArrowDownKey(event) {\n            const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n            this.changeFocusedItemIndex(event, itemIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            if (event.altKey) {\n                if (this.focusedItemInfo.index !== -1) {\n                    const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    !grouped && this.onItemChange({ originalEvent: event, processedItem });\n                }\n\n                this.popup && this.hide();\n                event.preventDefault();\n            } else {\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                this.changeFocusedItemIndex(event, itemIndex);\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const parentItem = this.activeItemPath.find((p) => p.key === processedItem.parentKey);\n            const root = ObjectUtils.isEmpty(processedItem.parent);\n\n            if (!root) {\n                this.focusedItemInfo = { index: -1, parentKey: parentItem ? parentItem.parentKey : '' };\n                this.searchValue = '';\n                this.onArrowDownKey(event);\n            }\n\n            this.activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== this.focusedItemInfo.parentKey);\n\n            event.preventDefault();\n        },\n        onArrowRightKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const grouped = this.isProccessedItemGroup(processedItem);\n\n            if (grouped) {\n                this.onItemChange({ originalEvent: event, processedItem });\n                this.focusedItemInfo = { index: -1, parentKey: processedItem.key };\n                this.searchValue = '';\n                this.onArrowDownKey(event);\n            }\n\n            event.preventDefault();\n        },\n        onHomeKey(event) {\n            this.changeFocusedItemIndex(event, this.findFirstItemIndex());\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedItemIndex(event, this.findLastItemIndex());\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const element = DomHandler.findSingle(this.list, `li[id=\"${`${this.focusedItemIdx}`}\"]`);\n                const anchorElement = element && DomHandler.findSingle(element, 'a[data-pc-section=\"itemlink\"]');\n\n                anchorElement ? anchorElement.click() : element && element.click();\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && (this.focusedItemInfo.index = this.findFirstFocusedItemIndex());\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            this.hide();\n            !this.popup && (this.focusedItemInfo.index = this.findFirstFocusedItemIndex());\n\n            event.preventDefault();\n        },\n        onTabKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && this.onItemChange({ originalEvent: event, processedItem });\n            }\n\n            this.hide();\n        },\n        onEnter(el) {\n            DomHandler.addStyles(el, { position: 'absolute' });\n            this.position();\n\n            if (this.autoZIndex) {\n                ZIndexUtils.set('menu', el, this.baseZIndex + this.$primevue.config.zIndex.menu);\n            }\n        },\n        onAfterEnter() {\n            this.bindOutsideClickListener();\n            this.bindResizeListener();\n\n            this.$emit('show');\n            DomHandler.focus(this.list);\n        },\n        onLeave() {\n            this.$emit('hide');\n            this.container = null;\n        },\n        onAfterLeave(el) {\n            if (this.autoZIndex) {\n                ZIndexUtils.clear(el);\n            }\n\n            this.unbindOutsideClickListener();\n            this.unbindResizeListener();\n        },\n        position() {\n            let left = this.pageX + 1;\n            let top = this.pageY + 1;\n            let width = this.container.offsetParent ? this.container.offsetWidth : DomHandler.getHiddenElementOuterWidth(this.container);\n            let height = this.container.offsetParent ? this.container.offsetHeight : DomHandler.getHiddenElementOuterHeight(this.container);\n            let viewport = DomHandler.getViewport();\n\n            //flip\n            if (left + width - document.body.scrollLeft > viewport.width) {\n                left -= width;\n            }\n\n            //flip\n            if (top + height - document.body.scrollTop > viewport.height) {\n                top -= height;\n            }\n\n            //fit\n            if (left < document.body.scrollLeft) {\n                left = document.body.scrollLeft;\n            }\n\n            //fit\n            if (top < document.body.scrollTop) {\n                top = document.body.scrollTop;\n            }\n\n            this.container.style.left = left + 'px';\n            this.container.style.top = top + 'px';\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    const isOutsideContainer = this.container && !this.container.contains(event.target);\n                    const isOutsideTarget = this.visible ? !(this.target && (this.target === event.target || this.target.contains(event.target))) : true;\n\n                    if (isOutsideContainer && isOutsideTarget) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.visible && !DomHandler.isTouchDevice()) {\n                        this.hide();\n                    }\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        bindDocumentContextMenuListener() {\n            if (!this.documentContextMenuListener) {\n                this.documentContextMenuListener = (event) => {\n                    event.button === 2 && this.show(event);\n                };\n\n                document.addEventListener('contextmenu', this.documentContextMenuListener);\n            }\n        },\n        unbindDocumentContextMenuListener() {\n            if (this.documentContextMenuListener) {\n                document.removeEventListener('contextmenu', this.documentContextMenuListener);\n                this.documentContextMenuListener = null;\n            }\n        },\n        isItemMatched(processedItem) {\n            return this.isValidItem(processedItem) && this.getProccessedItemLabel(processedItem)?.toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase());\n        },\n        isValidItem(processedItem) {\n            return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item) && this.isItemVisible(processedItem.item);\n        },\n        isValidSelectedItem(processedItem) {\n            return this.isValidItem(processedItem) && this.isSelected(processedItem);\n        },\n        isSelected(processedItem) {\n            return this.activeItemPath.some((p) => p.key === processedItem.key);\n        },\n        findFirstItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidItem(processedItem));\n        },\n        findLastItemIndex() {\n            return ObjectUtils.findLastIndex(this.visibleItems, (processedItem) => this.isValidItem(processedItem));\n        },\n        findNextItemIndex(index) {\n            const matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex((processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;\n        },\n        findPrevItemIndex(index) {\n            const matchedItemIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleItems.slice(0, index), (processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex : index;\n        },\n        findSelectedItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidSelectedItem(processedItem));\n        },\n        findFirstFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;\n        },\n        findLastFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;\n        },\n        searchItems(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let itemIndex = -1;\n            let matched = false;\n\n            if (this.focusedItemInfo.index !== -1) {\n                itemIndex = this.visibleItems.slice(this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem));\n                itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem)) : itemIndex + this.focusedItemInfo.index;\n            } else {\n                itemIndex = this.visibleItems.findIndex((processedItem) => this.isItemMatched(processedItem));\n            }\n\n            if (itemIndex !== -1) {\n                matched = true;\n            }\n\n            if (itemIndex === -1 && this.focusedItemInfo.index === -1) {\n                itemIndex = this.findFirstFocusedItemIndex();\n            }\n\n            if (itemIndex !== -1) {\n                this.changeFocusedItemIndex(event, itemIndex);\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedItemIndex(event, index) {\n            if (this.focusedItemInfo.index !== index) {\n                this.focusedItemInfo.index = index;\n                this.scrollInView();\n            }\n        },\n        scrollInView(index = -1) {\n            const id = index !== -1 ? `${this.id}_${index}` : this.focusedItemIdx;\n            const element = DomHandler.findSingle(this.list, `li[id=\"${id}\"]`);\n\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n            }\n        },\n        createProcessedItems(items, level = 0, parent = {}, parentKey = '') {\n            const processedItems = [];\n\n            items &&\n                items.forEach((item, index) => {\n                    const key = (parentKey !== '' ? parentKey + '_' : '') + index;\n                    const newItem = {\n                        item,\n                        index,\n                        level,\n                        key,\n                        parent,\n                        parentKey\n                    };\n\n                    newItem['items'] = this.createProcessedItems(item.items, level + 1, newItem, key);\n                    processedItems.push(newItem);\n                });\n\n            return processedItems;\n        },\n        containerRef(el) {\n            this.container = el;\n        },\n        listRef(el) {\n            this.list = el ? el.$el : undefined;\n        }\n    },\n    computed: {\n        processedItems() {\n            return this.createProcessedItems(this.model || []);\n        },\n        visibleItems() {\n            const processedItem = this.activeItemPath.find((p) => p.key === this.focusedItemInfo.parentKey);\n\n            return processedItem ? processedItem.items : this.processedItems;\n        },\n        focusedItemIdx() {\n            return this.focusedItemInfo.index !== -1 ? `${this.id}${ObjectUtils.isNotEmpty(this.focusedItemInfo.parentKey) ? '_' + this.focusedItemInfo.parentKey : ''}_${this.focusedItemInfo.index}` : null;\n        }\n    },\n    components: {\n        ContextMenuSub,\n        Portal\n    }\n};\n</script>\n", "<template>\n    <Portal :appendTo=\"appendTo\">\n        <transition name=\"p-contextmenu\" @enter=\"onEnter\" @after-enter=\"onAfterEnter\" @leave=\"onLeave\" @after-leave=\"onAfterLeave\" v-bind=\"ptm('transition')\">\n            <div v-if=\"visible\" :ref=\"containerRef\" :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n                <ContextMenuSub\n                    :ref=\"listRef\"\n                    :id=\"id + '_list'\"\n                    :class=\"cx('rootList')\"\n                    role=\"menubar\"\n                    :root=\"true\"\n                    :tabindex=\"tabindex\"\n                    aria-orientation=\"vertical\"\n                    :aria-activedescendant=\"focused ? focusedItemIdx : undefined\"\n                    :menuId=\"id\"\n                    :focusedItemId=\"focused ? focusedItemIdx : undefined\"\n                    :items=\"processedItems\"\n                    :templates=\"$slots\"\n                    :activeItemPath=\"activeItemPath\"\n                    :aria-labelledby=\"ariaLabelledby\"\n                    :aria-label=\"ariaLabel\"\n                    :level=\"0\"\n                    :visible=\"submenuVisible\"\n                    :pt=\"pt\"\n                    :unstyled=\"unstyled\"\n                    @focus=\"onFocus\"\n                    @blur=\"onBlur\"\n                    @keydown=\"onKeyDown\"\n                    @item-click=\"onItemClick\"\n                    @item-mouseenter=\"onItemMouseEnter\"\n                    @item-mousemove=\"onItemMouseMove\"\n                />\n            </div>\n        </transition>\n    </Portal>\n</template>\n\n<script>\nimport { DomHandler, ObjectUtils, UniqueComponentId, ZIndexUtils } from '@primevue/core/utils';\nimport Portal from 'primevue/portal';\nimport BaseContextMenu from './BaseContextMenu.vue';\nimport ContextMenuSub from './ContextMenuSub.vue';\n\nexport default {\n    name: 'ContextMenu',\n    extends: BaseContextMenu,\n    inheritAttrs: false,\n    emits: ['focus', 'blur', 'show', 'hide', 'before-show', 'before-hide'],\n    target: null,\n    outsideClickListener: null,\n    resizeListener: null,\n    documentContextMenuListener: null,\n    pageX: null,\n    pageY: null,\n    container: null,\n    list: null,\n    data() {\n        return {\n            id: this.$attrs.id,\n            focused: false,\n            focusedItemInfo: { index: -1, level: 0, parentKey: '' },\n            activeItemPath: [],\n            visible: false,\n            submenuVisible: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        activeItemPath(newPath) {\n            if (ObjectUtils.isNotEmpty(newPath)) {\n                this.bindOutsideClickListener();\n                this.bindResizeListener();\n            } else if (!this.visible) {\n                this.unbindOutsideClickListener();\n                this.unbindResizeListener();\n            }\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n\n        if (this.global) {\n            this.bindDocumentContextMenuListener();\n        }\n    },\n    beforeUnmount() {\n        this.unbindResizeListener();\n        this.unbindOutsideClickListener();\n        this.unbindDocumentContextMenuListener();\n\n        if (this.container && this.autoZIndex) {\n            ZIndexUtils.clear(this.container);\n        }\n\n        this.target = null;\n        this.container = null;\n    },\n    methods: {\n        getItemProp(item, name) {\n            return item ? ObjectUtils.getItemValue(item[name]) : undefined;\n        },\n        getItemLabel(item) {\n            return this.getItemProp(item, 'label');\n        },\n        isItemDisabled(item) {\n            return this.getItemProp(item, 'disabled');\n        },\n        isItemVisible(item) {\n            return this.getItemProp(item, 'visible') !== false;\n        },\n        isItemGroup(item) {\n            return ObjectUtils.isNotEmpty(this.getItemProp(item, 'items'));\n        },\n        isItemSeparator(item) {\n            return this.getItemProp(item, 'separator');\n        },\n        getProccessedItemLabel(processedItem) {\n            return processedItem ? this.getItemLabel(processedItem.item) : undefined;\n        },\n        isProccessedItemGroup(processedItem) {\n            return processedItem && ObjectUtils.isNotEmpty(processedItem.items);\n        },\n        toggle(event) {\n            this.visible ? this.hide() : this.show(event);\n        },\n        show(event) {\n            this.$emit('before-show');\n            this.activeItemPath = [];\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n            DomHandler.focus(this.list);\n\n            this.pageX = event.pageX;\n            this.pageY = event.pageY;\n            this.visible ? this.position() : (this.visible = true);\n\n            event.stopPropagation();\n            event.preventDefault();\n        },\n        hide() {\n            this.$emit('before-hide');\n            this.visible = false;\n            this.activeItemPath = [];\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n        },\n        onFocus(event) {\n            this.focused = true;\n            this.focusedItemInfo = this.focusedItemInfo.index !== -1 ? this.focusedItemInfo : { index: -1, level: 0, parentKey: '' };\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n            this.searchValue = '';\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'PageDown':\n                case 'PageUp':\n                case 'Backspace':\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n                        this.searchItems(event, event.key);\n                    }\n\n                    break;\n            }\n        },\n        onItemChange(event) {\n            const { processedItem, isFocus } = event;\n\n            if (ObjectUtils.isEmpty(processedItem)) return;\n\n            const { index, key, level, parentKey, items } = processedItem;\n            const grouped = ObjectUtils.isNotEmpty(items);\n            const activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== parentKey && p.parentKey !== key);\n\n            if (grouped) {\n                activeItemPath.push(processedItem);\n                this.submenuVisible = true;\n            }\n\n            this.focusedItemInfo = { index, level, parentKey };\n            this.activeItemPath = activeItemPath;\n\n            isFocus && DomHandler.focus(this.list);\n        },\n        onItemClick(event) {\n            const { processedItem } = event;\n            const grouped = this.isProccessedItemGroup(processedItem);\n            const selected = this.isSelected(processedItem);\n\n            if (selected) {\n                const { index, key, level, parentKey } = processedItem;\n\n                this.activeItemPath = this.activeItemPath.filter((p) => key !== p.key && key.startsWith(p.key));\n                this.focusedItemInfo = { index, level, parentKey };\n\n                DomHandler.focus(this.list);\n            } else {\n                grouped ? this.onItemChange(event) : this.hide();\n            }\n        },\n        onItemMouseEnter(event) {\n            this.onItemChange(event);\n        },\n        onItemMouseMove(event) {\n            if (this.focused) {\n                this.changeFocusedItemIndex(event, event.processedItem.index);\n            }\n        },\n        onArrowDownKey(event) {\n            const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n            this.changeFocusedItemIndex(event, itemIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            if (event.altKey) {\n                if (this.focusedItemInfo.index !== -1) {\n                    const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    !grouped && this.onItemChange({ originalEvent: event, processedItem });\n                }\n\n                this.popup && this.hide();\n                event.preventDefault();\n            } else {\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                this.changeFocusedItemIndex(event, itemIndex);\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const parentItem = this.activeItemPath.find((p) => p.key === processedItem.parentKey);\n            const root = ObjectUtils.isEmpty(processedItem.parent);\n\n            if (!root) {\n                this.focusedItemInfo = { index: -1, parentKey: parentItem ? parentItem.parentKey : '' };\n                this.searchValue = '';\n                this.onArrowDownKey(event);\n            }\n\n            this.activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== this.focusedItemInfo.parentKey);\n\n            event.preventDefault();\n        },\n        onArrowRightKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const grouped = this.isProccessedItemGroup(processedItem);\n\n            if (grouped) {\n                this.onItemChange({ originalEvent: event, processedItem });\n                this.focusedItemInfo = { index: -1, parentKey: processedItem.key };\n                this.searchValue = '';\n                this.onArrowDownKey(event);\n            }\n\n            event.preventDefault();\n        },\n        onHomeKey(event) {\n            this.changeFocusedItemIndex(event, this.findFirstItemIndex());\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedItemIndex(event, this.findLastItemIndex());\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const element = DomHandler.findSingle(this.list, `li[id=\"${`${this.focusedItemIdx}`}\"]`);\n                const anchorElement = element && DomHandler.findSingle(element, 'a[data-pc-section=\"itemlink\"]');\n\n                anchorElement ? anchorElement.click() : element && element.click();\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && (this.focusedItemInfo.index = this.findFirstFocusedItemIndex());\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            this.hide();\n            !this.popup && (this.focusedItemInfo.index = this.findFirstFocusedItemIndex());\n\n            event.preventDefault();\n        },\n        onTabKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && this.onItemChange({ originalEvent: event, processedItem });\n            }\n\n            this.hide();\n        },\n        onEnter(el) {\n            DomHandler.addStyles(el, { position: 'absolute' });\n            this.position();\n\n            if (this.autoZIndex) {\n                ZIndexUtils.set('menu', el, this.baseZIndex + this.$primevue.config.zIndex.menu);\n            }\n        },\n        onAfterEnter() {\n            this.bindOutsideClickListener();\n            this.bindResizeListener();\n\n            this.$emit('show');\n            DomHandler.focus(this.list);\n        },\n        onLeave() {\n            this.$emit('hide');\n            this.container = null;\n        },\n        onAfterLeave(el) {\n            if (this.autoZIndex) {\n                ZIndexUtils.clear(el);\n            }\n\n            this.unbindOutsideClickListener();\n            this.unbindResizeListener();\n        },\n        position() {\n            let left = this.pageX + 1;\n            let top = this.pageY + 1;\n            let width = this.container.offsetParent ? this.container.offsetWidth : DomHandler.getHiddenElementOuterWidth(this.container);\n            let height = this.container.offsetParent ? this.container.offsetHeight : DomHandler.getHiddenElementOuterHeight(this.container);\n            let viewport = DomHandler.getViewport();\n\n            //flip\n            if (left + width - document.body.scrollLeft > viewport.width) {\n                left -= width;\n            }\n\n            //flip\n            if (top + height - document.body.scrollTop > viewport.height) {\n                top -= height;\n            }\n\n            //fit\n            if (left < document.body.scrollLeft) {\n                left = document.body.scrollLeft;\n            }\n\n            //fit\n            if (top < document.body.scrollTop) {\n                top = document.body.scrollTop;\n            }\n\n            this.container.style.left = left + 'px';\n            this.container.style.top = top + 'px';\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    const isOutsideContainer = this.container && !this.container.contains(event.target);\n                    const isOutsideTarget = this.visible ? !(this.target && (this.target === event.target || this.target.contains(event.target))) : true;\n\n                    if (isOutsideContainer && isOutsideTarget) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.visible && !DomHandler.isTouchDevice()) {\n                        this.hide();\n                    }\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        bindDocumentContextMenuListener() {\n            if (!this.documentContextMenuListener) {\n                this.documentContextMenuListener = (event) => {\n                    event.button === 2 && this.show(event);\n                };\n\n                document.addEventListener('contextmenu', this.documentContextMenuListener);\n            }\n        },\n        unbindDocumentContextMenuListener() {\n            if (this.documentContextMenuListener) {\n                document.removeEventListener('contextmenu', this.documentContextMenuListener);\n                this.documentContextMenuListener = null;\n            }\n        },\n        isItemMatched(processedItem) {\n            return this.isValidItem(processedItem) && this.getProccessedItemLabel(processedItem)?.toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase());\n        },\n        isValidItem(processedItem) {\n            return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item) && this.isItemVisible(processedItem.item);\n        },\n        isValidSelectedItem(processedItem) {\n            return this.isValidItem(processedItem) && this.isSelected(processedItem);\n        },\n        isSelected(processedItem) {\n            return this.activeItemPath.some((p) => p.key === processedItem.key);\n        },\n        findFirstItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidItem(processedItem));\n        },\n        findLastItemIndex() {\n            return ObjectUtils.findLastIndex(this.visibleItems, (processedItem) => this.isValidItem(processedItem));\n        },\n        findNextItemIndex(index) {\n            const matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex((processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;\n        },\n        findPrevItemIndex(index) {\n            const matchedItemIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleItems.slice(0, index), (processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex : index;\n        },\n        findSelectedItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidSelectedItem(processedItem));\n        },\n        findFirstFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;\n        },\n        findLastFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;\n        },\n        searchItems(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let itemIndex = -1;\n            let matched = false;\n\n            if (this.focusedItemInfo.index !== -1) {\n                itemIndex = this.visibleItems.slice(this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem));\n                itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem)) : itemIndex + this.focusedItemInfo.index;\n            } else {\n                itemIndex = this.visibleItems.findIndex((processedItem) => this.isItemMatched(processedItem));\n            }\n\n            if (itemIndex !== -1) {\n                matched = true;\n            }\n\n            if (itemIndex === -1 && this.focusedItemInfo.index === -1) {\n                itemIndex = this.findFirstFocusedItemIndex();\n            }\n\n            if (itemIndex !== -1) {\n                this.changeFocusedItemIndex(event, itemIndex);\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedItemIndex(event, index) {\n            if (this.focusedItemInfo.index !== index) {\n                this.focusedItemInfo.index = index;\n                this.scrollInView();\n            }\n        },\n        scrollInView(index = -1) {\n            const id = index !== -1 ? `${this.id}_${index}` : this.focusedItemIdx;\n            const element = DomHandler.findSingle(this.list, `li[id=\"${id}\"]`);\n\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n            }\n        },\n        createProcessedItems(items, level = 0, parent = {}, parentKey = '') {\n            const processedItems = [];\n\n            items &&\n                items.forEach((item, index) => {\n                    const key = (parentKey !== '' ? parentKey + '_' : '') + index;\n                    const newItem = {\n                        item,\n                        index,\n                        level,\n                        key,\n                        parent,\n                        parentKey\n                    };\n\n                    newItem['items'] = this.createProcessedItems(item.items, level + 1, newItem, key);\n                    processedItems.push(newItem);\n                });\n\n            return processedItems;\n        },\n        containerRef(el) {\n            this.container = el;\n        },\n        listRef(el) {\n            this.list = el ? el.$el : undefined;\n        }\n    },\n    computed: {\n        processedItems() {\n            return this.createProcessedItems(this.model || []);\n        },\n        visibleItems() {\n            const processedItem = this.activeItemPath.find((p) => p.key === this.focusedItemInfo.parentKey);\n\n            return processedItem ? processedItem.items : this.processedItems;\n        },\n        focusedItemIdx() {\n            return this.focusedItemInfo.index !== -1 ? `${this.id}${ObjectUtils.isNotEmpty(this.focusedItemInfo.parentKey) ? '_' + this.focusedItemInfo.parentKey : ''}_${this.focusedItemInfo.index}` : null;\n        }\n    },\n    components: {\n        ContextMenuSub,\n        Portal\n    }\n};\n</script>\n"],
  "mappings": "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",
  "names": ["theme", "_ref", "dt", "concat", "classes", "root", "rootList", "item", "_ref2", "instance", "processedItem", "isItemActive", "isItemFocused", "isItemDisabled", "itemContent", "itemLink", "itemIcon", "itemLabel", "submenuIcon", "submenu", "separator", "BaseStyle", "extend", "name", "name", "BaseComponent", "props", "model", "type", "Array", "appendTo", "String", "Object", "autoZIndex", "Boolean", "baseZIndex", "Number", "global", "tabindex", "ariaLabelledby", "ariaLabel", "style", "ContextMenuStyle", "provide", "$pcContextMenu", "$parentInstance", "hostName", "emits", "items", "menuId", "focusedItemId", "root", "visible", "level", "templates", "activeItemPath", "methods", "getItemId", "processedItem", "concat", "key", "getItemKey", "getItemProp", "params", "item", "ObjectUtils", "getItemValue", "undefined", "getItemLabel", "getItemLabelId", "getPTOptions", "index", "ptm", "context", "active", "isItemActive", "focused", "isItemFocused", "disabled", "isItemDisabled", "some", "path", "isItemVisible", "isItemGroup", "isNotEmpty", "onItemClick", "event", "originalEvent", "$emit", "isFocus", "onItemMouseEnter", "onItemMouseMove", "getAriaSetSize", "_this", "filter", "length", "getAriaPosInset", "_this2", "slice", "onEnter", "DomHandler", "nestedPosition", "$refs", "container", "getMenuItemProps", "action", "mergeProps", "cx", "icon", "label", "submenuicon", "components", "AngleRightIcon", "directives", "ripple", "Ripple", "_openBlock", "_createBlock", "_Transition", "_mergeProps", "$options", "_ctx", "$props", "_createElementBlock", "ref", "_Fragment", "_renderList", "id", "role", "_createElementVNode", "onClick", "$event", "onMouseenter", "onMousemove", "_withDirectives", "href", "target", "itemicon", "_resolveDynamicComponent", "_toDisplayString", "_hoisted_5", "_component_AngleRightIcon", "hasSubmenu", "_component_ContextMenuSub", "pt", "unstyled", "_cache", "onItemMouseenter", "onItemMousemove", "_hoisted_6", "script", "BaseContextMenu", "inheritAttrs", "outsideClickListener", "resizeListener", "documentContextMenuListener", "pageX", "pageY", "list", "data", "$attrs", "focusedItemInfo", "parentKey", "submenuVisible", "watch", "$attrsId", "newValue", "UniqueComponentId", "newPath", "bindOutsideClickListener", "bindResizeListener", "unbindOutsideClickListener", "unbindResizeListener", "mounted", "bindDocumentContextMenuListener", "beforeUnmount", "unbindDocumentContextMenuListener", "ZIndexUtils", "clear", "isItemSeparator", "getProccessedItemLabel", "isProccessedItemGroup", "toggle", "hide", "show", "focus", "position", "stopPropagation", "preventDefault", "onFocus", "onBlur", "searchValue", "onKeyDown", "metaKey", "ctrlKey", "code", "onArrowDownKey", "onArrowUpKey", "onArrowLeftKey", "onArrowRightKey", "onHomeKey", "onEndKey", "onSpaceKey", "onEnterKey", "onEscapeKey", "onTabKey", "isPrintableCharacter", "searchItems", "onItemChange", "isEmpty", "grouped", "p", "push", "selected", "isSelected", "startsWith", "changeFocusedItemIndex", "itemIndex", "findNextItemIndex", "findFirstFocusedItemIndex", "altKey", "visibleItems", "popup", "findPrevItemIndex", "findLastFocusedItemIndex", "parentItem", "find", "parent", "findFirstItemIndex", "findLastItemIndex", "element", "findSingle", "focusedItemIdx", "anchorElement", "click", "el", "addStyles", "set", "$primevue", "config", "zIndex", "menu", "onAfterEnter", "onLeave", "onAfterLeave", "left", "top", "width", "offsetParent", "offsetWidth", "getHiddenElementOuterWidth", "height", "offsetHeight", "getHiddenElementOuterHeight", "viewport", "getViewport", "document", "body", "scrollLeft", "scrollTop", "isOutsideContainer", "contains", "isOutsideTarget", "addEventListener", "removeEventListener", "_this3", "isTouchDevice", "window", "_this4", "button", "isItemMatched", "_this$getProccessedIt", "isValidItem", "toLocaleLowerCase", "isValidSelectedItem", "_this5", "findIndex", "_this6", "findLastIndex", "_this7", "matchedItemIndex", "_this8", "findSelectedItemIndex", "_this9", "selectedIndex", "char", "_this10", "matched", "searchTimeout", "clearTimeout", "setTimeout", "scrollInView", "scrollIntoView", "block", "inline", "createProcessedItems", "_this11", "arguments", "processedItems", "forEach", "newItem", "containerRef", "listRef", "$el", "computed", "_this12", "ContextMenuSub", "Portal", "_component_Portal", "_createVNode", "$data", "ptmi", "$slots", "onKeydown"]
}
